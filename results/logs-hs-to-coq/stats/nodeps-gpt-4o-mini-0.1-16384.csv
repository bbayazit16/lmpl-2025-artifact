name,file,tactics_count,tactics
Eq_eq_bool,GHC/Base.v,4,destruct;constructor;simpl;auto
iterates_In,GHC/Enum.v,21,rewrite;split;intros;induction;exists;split;lia;reflexivity;destruct;exists;split;lia;rewrite;reflexivity;intros;apply;rewrite;apply;apply;apply;lia
Foldable_length_cons,Data/Foldable.v,3,simpl;rewrite;reflexivity
flat_map_nil,GHC/Base.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
flat_map_unpack_cons_f,GHC/List.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
Foldable_foldl'_cons,Data/Foldable.v,5,intros;unfold;simpl;rewrite;reflexivity
instance_MonoidLaws_list,GHC/Base.v,15,split;intros;simpl;apply;intros;simpl;apply;intros;simpl;apply;intros;simpl;induction;simpl;auto
enumFromTo_Int_iterates',GHC/Enum.v,10,rewrite;case;have;omega;case;case;rewrite;f_equal;rewrite;omega
eftInt_aux_unroll,GHC/Enum.v,16,revert;induction;intros;destruct;subst;simpl;reflexivity;simpl;destruct;apply;apply;auto;rewrite;apply;apply;auto
eq_replace_r,GHC/Base.v,3,intros;rewrite;apply
N_popcount_Nsucc_double,Data/Bits/Popcount.v,6,intros;unfold;rewrite;simpl;rewrite;reflexivity
EqExact_Data_Either_Either,Data/Either.v,12,constructor;repeat;unfold;case;apply;case;apply;case;apply;case;rewrite;reflexivity
Pos_popcount_pow2,Data/Bits/Popcount.v,7,intros;unfold;rewrite;simpl;rewrite;rewrite;reflexivity
Foldable_any_app,Data/Foldable.v,9,intros;unfold;unfold;unfold;simpl;rewrite;rewrite;rewrite;reflexivity
Eq_eq_Word,GHC/Base.v,5,unfold;case;constructor;apply;rewrite
unzip_zip,GHC/List.v,11,intros;induction;simpl;destruct;simpl;discriminate;simpl;injection;subst;rewrite;reflexivity
iterates'_In,GHC/Enum.v,23,split;intros;induction;exists;split;done;rewrite;reflexivity;destruct;exists;split;apply;assumption;rewrite;assumption;destruct;rewrite;apply;rewrite;apply;apply;assumption;apply
Foldable_length_nil,Data/Foldable.v,2,simpl;reflexivity
lines_def,Data/OldList.v,0,
eq_replace_l,GHC/Base.v,3,intros;rewrite;reflexivity
hs_coq_foldl'_list,Data/Foldable.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
instance_MonadLaws_Data_Either_Either,Data/Either.v,19,split;repeat;unfold;simpl;intros;destruct;auto;intros;destruct;auto;intros;destruct;auto;intros;destruct;auto;intros;destruct;auto
eftInt_aux_pf,../base/GHC/Enum.v,9,intros;apply;assumption;apply;unfold;apply;apply;apply;assumption
parametric_eq_sym,GHC/Base.v,5,intros;unfold;intros;apply;apply
foldr_initial,GHC/Base.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
instance_SemigroupLaws_option,GHC/Base.v,13,split;intros;destruct;simpl;reflexivity;apply;reflexivity;rewrite;reflexivity;rewrite;reflexivity;rewrite;reflexivity
Build_EqLaws_reflect,GHC/Base.v,13,constructor;intros;auto;apply;apply;apply;apply;apply;apply;intros;rewrite;rewrite;reflexivity
N_popcount_diff,Data/Bits/Popcount.v,11,intros;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;reflexivity
In_zip_swap,GHC/List.v,15,intros;induction;simpl;destruct;inversion;destruct;destruct;inversion;simpl;destruct;subst;apply;apply;apply;apply
Eq_Symmetric,GHC/Base.v,3,intros;apply;apply
List_foldl_foldr,GHC/List.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
instance_SemigroupLaws_unit,GHC/Base.v,3,split;intros;reflexivity
dropWhile_cons_prop,../base/Data/OldList.v,12,intros;induction;simpl;rewrite;reflexivity;simpl;destruct;apply;rewrite;apply;rewrite;reflexivity
iterates'_length,GHC/Enum.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
hs_coq_reverse,GHC/List.v,5,induction;simpl;reflexivity;rewrite;reflexivity
instance_ApplicativeLaws_Data_Either_Either,Data/Either.v,11,split;repeat;unfold;intros;destruct;simpl;auto;intros;destruct;simpl;auto
fst_pair,Data/Tuple.v,1,reflexivity
hs_coq_foldl_list',Data/Foldable.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
instance_FunctorLaws_identity,Data/Functor/Identity.v,6,split;intros;unfold;reflexivity;unfold;reflexivity
iter_plus_nat,GHC/Enum.v,8,induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;reflexivity
Foldable_foldr_cons,Data/Foldable.v,4,unfold;simpl;rewrite;reflexivity
lines_cons,Data/OldList.v,0,
Foldable_foldl'_app,Data/Foldable.v,5,intros;unfold;rewrite;rewrite;reflexivity
flat_map_cons_id,GHC/Base.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
Eq_eq_Int,GHC/Base.v,5,apply;move;rewrite;move;apply
mapAccumL_cons,Data/Traversable.v,9,intros;unfold;unfold;simpl;rewrite;rewrite;destruct;destruct;reflexivity
Eq_Equivalence,GHC/Base.v,5,split;apply;split;apply;apply
break_length,../base/Data/OldList.v,21,intros;destruct;rewrite;induction;simpl;destruct;simpl;omega;simpl;destruct;destruct;simpl;apply;rewrite;reflexivity;destruct;simpl;apply;apply;rewrite;reflexivity
Neq_sym,GHC/Base.v,3,move;rewrite;apply
mapAccumL_nil,Data/Traversable.v,3,intros;simpl;reflexivity
Eq_m,GHC/Base.v,0,
EqExact_Proxy,Data/Proxy.v,5,constructor;intros;destruct;simpl;apply
Neq_atrans,GHC/Base.v,7,move;apply;case;left;rewrite;right;rewrite
reverse_unit,GHC/List.v,6,intros;rewrite;rewrite;simpl;rewrite;reflexivity
hs_coq_partition,Data/OldList.v,9,induction;simpl;reflexivity;simpl;destruct;rewrite;reflexivity;rewrite;reflexivity
Eq_Reflexive,GHC/Base.v,2,intros;apply
reverse_append,GHC/List.v,5,intros;rewrite;simpl;rewrite;reflexivity
N_popcount_1_pow2,Data/Bits/Popcount.v,5,intros;apply;exists;rewrite;reflexivity
iterates_length,GHC/Enum.v,3,rewrite;rewrite;reflexivity
Pop_popcount_diff,Data/Bits/Popcount.v,0,
elem_eq,Data/Foldable.v,9,intros;induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;reflexivity
length_zip,GHC/List.v,4,intros;rewrite;rewrite;reflexivity
In_zip_fst,GHC/List.v,20,intros;apply;destruct;rewrite;clear;induction;simpl;contradiction;simpl;destruct;subst;exists;simpl;left;reflexivity;destruct;exists;simpl;right;assumption
instance_ApplicativeLaws_option,GHC/Base.v,27,split;intros;destruct;simpl;auto;intros;destruct;destruct;destruct;simpl;auto;intros;simpl;reflexivity;intros;destruct;simpl;auto;intros;destruct;destruct;simpl;auto;intros;destruct;simpl;auto
N_popcount_pow2,Data/Bits/Popcount.v,9,induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;rewrite;reflexivity
snd_unzip_map,GHC/List.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
words_cons,Data/OldList.v,16,intros;unfold;rewrite;simpl;destruct;rewrite;reflexivity;destruct;simpl;destruct;apply;rewrite;rewrite;reflexivity;rewrite;reflexivity
dropWhile_cons_length,../base/Data/OldList.v,15,intros;apply;simpl;destruct;discriminate;simpl;destruct;apply;omega;auto;inversion;subst;simpl;apply;apply
words_nil,Data/OldList.v,4,simpl;rewrite;simpl;reflexivity
forM_map,Data/Traversable.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
flat_map_app,GHC/Base.v,3,rewrite;rewrite;reflexivity
parametric_eq_trans,GHC/Base.v,5,intros;unfold;intros;apply;assumption
safeSubN_sub,../base/GHC/Num.v,5,intros;unfold;rewrite;rewrite;reflexivity
EqExact_pair,GHC/Base.v,10,constructor;intros;rewrite;destruct;apply;apply;rewrite;rewrite;subst;reflexivity
hs_coq_map,GHC/Base.v,2,unfold;reflexivity
map_id,GHC/Base.v,5,induction;reflexivity;simpl;rewrite;reflexivity
instance_SemigroupLaws_list,GHC/Base.v,20,split;intros;induction;simpl;destruct;destruct;simpl;apply;destruct;destruct;simpl;apply;rewrite;apply;rewrite;apply;rewrite;simpl;rewrite;apply
instance_MonadLaws_option,GHC/Base.v,16,split;intros;simpl;destruct;auto;destruct;auto;destruct;destruct;auto;destruct;auto;reflexivity;destruct;destruct;auto
iterates'_ext,GHC/Enum.v,8,intros;induction;simpl;reflexivity;simpl;rewrite;rewrite;reflexivity
Neq_neq,GHC/Base.v,6,apply;split;move;rewrite;move;rewrite
unzip_equal_length,GHC/List.v,13,intros;induction;simpl;inversion;reflexivity;simpl;destruct;inversion;subst;apply;simpl;rewrite;reflexivity
elem_nil,Data/Foldable.v,5,unfold;unfold;unfold;simpl;auto
instance_ApplicativeLaws_identity,Data/Functor/Identity.v,12,constructor;intros;simpl;reflexivity;simpl;reflexivity;simpl;reflexivity;simpl;reflexivity;simpl;reflexivity
hs_coq_length_list',Data/Foldable.v,7,unfold;induction;simpl;reflexivity;simpl;rewrite;reflexivity
instance_SemigroupLaws_comparison,GHC/Base.v,5,split;intros;destruct;simpl;auto
EqExact_comparison,GHC/Base.v,9,constructor;intros;destruct;constructor;apply;auto;constructor;apply;auto
simpl_list_nil_eq,GHC/Base.v,3,unfold;simpl;reflexivity
Foldable_foldl'_nil,Data/Foldable.v,3,unfold;simpl;auto
Foldable_elem_proper,Data/Foldable.v,5,intros;unfold;rewrite;rewrite;reflexivity
simpl_option_some_eq,GHC/Base.v,6,rewrite;destruct;apply;apply;rewrite;reflexivity
hs_coq_foldr_list',Data/Foldable.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
instance_MonoidLaws_comparison,GHC/Base.v,15,split;unfold;intros;destruct;auto;intros;destruct;auto;intros;destruct;apply;intros;induction;simpl;auto
instance_ApplicativeLaws_list,GHC/Base.v,13,split;intros;simpl;rewrite;reflexivity;rewrite;reflexivity;reflexivity;rewrite;reflexivity;rewrite;reflexivity;reflexivity
flat_map_concat_map,GHC/Base.v,7,induction;simpl;reflexivity;simpl;rewrite;rewrite;reflexivity
map_snd_zip,GHC/List.v,13,intros;induction;simpl;destruct;simpl;discriminate;destruct;simpl;inversion;f_equal;apply;inversion;reflexivity
iter_plus_N,GHC/Enum.v,8,induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;reflexivity
EqLaws_Data_Either_Either,Data/Either.v,9,constructor;intros;destruct;simpl;congruence;apply;apply;apply;apply
instance_MonoidLaws_unit,GHC/Base.v,13,split;intros;simpl;reflexivity;intros;simpl;reflexivity;intros;simpl;reflexivity;intros;simpl;reflexivity
Eq_Transitive,GHC/Base.v,3,intros;apply;assumption
EqLaws_Int,GHC/Base.v,5,constructor;unfold;intros;rewrite;auto
Neq_irrefl,GHC/Base.v,5,unfold;intros;apply;rewrite;apply
take_drop,GHC/List.v,12,intros;induction;simpl;rewrite;reflexivity;destruct;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity
Foldable_foldl_nil,Data/Foldable.v,3,unfold;simpl;reflexivity
Foldable_foldr_nil,Data/Foldable.v,4,intros;unfold;simpl;reflexivity
hs_coq_lenAcc,GHC/List.v,9,generalize_dependent;induction;simpl;intros;rewrite;reflexivity;rewrite;rewrite;ring
fmfm,GHC/Base.v,4,rewrite;rewrite;rewrite;reflexivity
hs_coq_foldr_base,GHC/Base.v,1,reflexivity
instance_FunctorLaws_list,GHC/Base.v,7,split;intros;apply;rewrite;reflexivity;rewrite;reflexivity
hs_coq_tuple_fst,Data/Tuple.v,3,destruct;simpl;reflexivity
instance_FunctorLaws_Data_Either_Either,Data/Either.v,9,split;intros;destruct;simpl;reflexivity;intros;destruct;simpl;reflexivity
eftInt_In,GHC/Enum.v,27,rewrite;split;rewrite;move;rewrite;omega;elim;exists;suff;apply;omega;move;case;move;omega;case;subst;exists;omega;have;omega;case;omega;rewrite;exists;apply;rewrite
EqExact_list,GHC/Base.v,15,constructor;intros;rewrite;unfold;rewrite;destruct;constructor;apply;subst;reflexivity;constructor;apply;subst;rewrite;reflexivity
Foldable_any_cons,Data/Foldable.v,6,unfold;unfold;unfold;simpl;rewrite;reflexivity
Foldable_foldr_app,Data/Foldable.v,8,induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;reflexivity
foldr_nil,GHC/Base.v,3,induction;simpl;reflexivity
map_map,GHC/Base.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
instance_MonadLaws_identity,Data/Functor/Identity.v,10,constructor;intros;destruct;reflexivity;destruct;reflexivity;destruct;destruct;destruct;reflexivity
Foldable_any_nil,Data/Foldable.v,3,unfold;simpl;reflexivity
simpl_option_none_eq,GHC/Base.v,2,unfold;reflexivity
instance_MonadLaws_list,GHC/Base.v,16,split;intros;repeat;unfold;simpl;rewrite;reflexivity;rewrite;reflexivity;rewrite;reflexivity;rewrite;reflexivity;reflexivity;rewrite;reflexivity
reverse_nil,GHC/List.v,2,simpl;reflexivity
zip_unzip_map,GHC/List.v,9,induction;simpl;reflexivity;simpl;rewrite;rewrite;simpl;rewrite;reflexivity
EqLaws_pair,GHC/Base.v,25,split;intros;simpl;apply;intros;simpl;intros;split;apply;apply;assumption;intros;simpl;intros;destruct;split;apply;apply;assumption;intros;simpl;rewrite;destruct;simpl;auto
EqExact_unit,GHC/Base.v,2,constructor;intros
EqExact_Word,GHC/Base.v,2,constructor;apply
length_app,GHC/List.v,7,induction;simpl;rewrite;reflexivity;rewrite;rewrite;reflexivity
Foldable_foldl_app,Data/Foldable.v,9,intros;induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;reflexivity
hs_coq_list_length,GHC/List.v,5,induction;simpl;reflexivity;rewrite;reflexivity
iterates_map,GHC/Enum.v,3,rewrite;rewrite;rewrite
N_popcount_Ndouble,Data/Bits/Popcount.v,4,intros;destruct;reflexivity;reflexivity
EqExact_bool,GHC/Base.v,5,constructor;intros;case;constructor;apply
iterates'_map,GHC/Enum.v,9,induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;rewrite;reflexivity
Neq_inv,GHC/Base.v,2,rewrite;apply
map_cong,GHC/Base.v,8,intros;induction;simpl;reflexivity;simpl;rewrite;rewrite;reflexivity
EqLaws_list,GHC/Base.v,26,constructor;intros;induction;simpl;auto;intros;induction;destruct;simpl;auto;split;auto;intros;induction;destruct;destruct;simpl;auto;intros;subst;auto;intros;simpl;rewrite;rewrite;reflexivity
hs_coq_foldr_list,Data/Foldable.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
EqLaws_comparison,GHC/Base.v,17,split;intros;destruct;constructor;auto;destruct;simpl;auto;destruct;simpl;auto;destruct;simpl;auto;destruct;simpl;auto
iterates_iterates',GHC/Enum.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
simpl_list_cons_eq,GHC/Base.v,0,
flat_map_cons_f,GHC/Base.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
EqLaws_Word,GHC/Base.v,13,constructor;intros;unfold;apply;rewrite;intros;apply;rewrite;intros;apply;rewrite;intros;apply
In_zip_map,GHC/List.v,13,intros;induction;simpl;contradiction;simpl;destruct;subst;simpl;rewrite;reflexivity;apply;rewrite;reflexivity
EqLaws_bool,GHC/Base.v,21,constructor;unfold;simpl;auto;case;case;simpl;auto;case;case;simpl;auto;case;case;case;simpl;auto;case;case;simpl;auto
hs_coq_foldl_list,Data/Foldable.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
reverse_involutive,GHC/List.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
map_append,GHC/Base.v,7,induction;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity
EqLaws_option,GHC/Base.v,22,split;intros;destruct;simpl;auto;intros;destruct;simpl;auto;intros;congruence;intros;destruct;simpl;auto;intros;congruence;intros;destruct;simpl;auto;congruence
EqLaws_unit,GHC/Base.v,4,constructor;intros;simpl;auto
concat_map,GHC/Base.v,7,induction;simpl;reflexivity;simpl;rewrite;rewrite;reflexivity
length_cons,GHC/List.v,3,simpl;rewrite;reflexivity
foldr_id,GHC/Base.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
instance_FunctorLaws_option,GHC/Base.v,7,split;intros;simpl;destruct;reflexivity;destruct;reflexivity
flat_map_map,GHC/Base.v,3,rewrite;rewrite;reflexivity
Foldable_elem_app,Data/Foldable.v,15,intros;unfold;unfold;unfold;simpl;induction;simpl;rewrite;reflexivity;simpl;rewrite;f_equal;rewrite;rewrite;reflexivity
EqExact_Down,Data/Ord.v,17,constructor;unfold;unfold;unfold;unfold;unfold;unfold;unfold;unfold;case;apply;case;apply;case;apply;case;apply
iter_plus_Z,GHC/Enum.v,8,induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;reflexivity
iterates_ext,GHC/Enum.v,4,move;rewrite;apply;exact
length_nil,GHC/List.v,2,simpl;reflexivity
enumFromTo_Int_In,GHC/Enum.v,12,rewrite;rewrite;split;intros;exists;split;auto;omega;exists;split;auto;omega
eftInt_iterates',GHC/Enum.v,7,rewrite;rewrite;omega;rewrite;omega;rewrite;reflexivity
In_zip,GHC/List.v,19,intros;induction;destruct;simpl;contradiction;simpl;contradiction;simpl;contradiction;simpl;destruct;inversion;subst;split;left;reflexivity;right;apply;assumption
instance_MonoidLaws_option,GHC/Base.v,18,split;unfold;intros;destruct;simpl;auto;intros;destruct;simpl;auto;intros;destruct;simpl;auto;intros;induction;simpl;auto
eftInt_aux_In,GHC/Enum.v,13,rewrite;rewrite;split;intros;subst;exists;split;apply;omega;exists;split;apply;omega
snd_unzip,GHC/List.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
N_double_succ,Data/Bits/Popcount.v,7,intros;destruct;simpl;reflexivity;simpl;rewrite;reflexivity
Pos_popcount_1_Is_power,Data/Bits/Popcount.v,17,intros;unfold;exists;rewrite;destruct;apply;rewrite;simpl;rewrite;apply;rewrite;reflexivity;exfalso;apply;apply;rewrite;discriminate
hs_coq_tuple_snd,Data/Tuple.v,1,reflexivity
In_zip_snd,GHC/List.v,23,intros;induction;simpl;contradiction;destruct;simpl;contradiction;simpl;destruct;inversion;subst;exists;simpl;apply;apply;apply;apply;auto;destruct;exists;simpl;apply;auto
snd_pair,Data/Tuple.v,2,simpl;reflexivity
Foldable_foldr_map,Data/Foldable.v,8,induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;reflexivity
Foldable_foldl_cons,Data/Foldable.v,4,unfold;simpl;rewrite;reflexivity
hs_coq_lenAcc_add,GHC/List.v,8,induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;reflexivity
N_popcount_double,Data/Bits/Popcount.v,8,intros;unfold;rewrite;rewrite;rewrite;simpl;rewrite;reflexivity
EqLaws_Down,Data/Ord.v,7,constructor;intros;destruct;left;assumption;right;assumption
EqLaws_Proxy,Data/Proxy.v,5,constructor;intros;destruct;simpl;auto
elem_cons,Data/Foldable.v,7,intros;unfold;unfold;unfold;simpl;rewrite;reflexivity
flat_map_cong,GHC/Base.v,5,intros;rewrite;rewrite;apply;apply
hs_coq_filter,GHC/List.v,8,induction;simpl;reflexivity;destruct;rewrite;reflexivity;rewrite;reflexivity
foldr_single,GHC/Base.v,2,simpl;reflexivity
hs_coq_foldl_base,GHC/Base.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
EqExact_Int,GHC/Base.v,5,constructor;intros;unfold;rewrite;apply
Eq_is_true_m,GHC/Base.v,7,intros;split;intros;apply;apply;apply;apply
forM_cong,Data/Traversable.v,13,intros;induction;simpl;reflexivity;simpl;rewrite;apply;rewrite;reflexivity;intros;apply;apply;assumption
hs_coq_length_list,Data/Foldable.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
EqExact_option,GHC/Base.v,0,
Eq_reflI,GHC/Base.v,3,intros;rewrite;apply
eftInt_aux_iterates,GHC/Enum.v,2333,rewrite;rewrite;case;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;auto;rewrite;rewrite;omega;rewrite;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite;rewrite;omega;rewrite;omega;rewrite;omega;rewrite;rewrite;apply;intros;rewrite;destruct;subst;simpl;rewrite;simpl;rewrite;auto;rewrite;rewrite
