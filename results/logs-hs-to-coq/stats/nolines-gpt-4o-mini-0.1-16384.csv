name,file,tactics_count,tactics
Eq_eq_bool,GHC/Base.v,7,rewrite;case;case;simpl;constructor;rewrite;rewrite
iterates_In,GHC/Enum.v,15,split;intros;destruct;exists;split;auto;apply;auto;apply;destruct;exists;split;auto;apply;apply
Foldable_length_cons,Data/Foldable.v,3,simpl;rewrite;reflexivity
flat_map_nil,GHC/Base.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
flat_map_unpack_cons_f,GHC/List.v,7,intros;induction;simpl;reflexivity;simpl;rewrite;reflexivity
Foldable_foldl'_cons,Data/Foldable.v,4,intros;unfold;rewrite;reflexivity
instance_MonoidLaws_list,GHC/Base.v,26,split;intros;rewrite;rewrite;rewrite;reflexivity;intros;rewrite;rewrite;rewrite;reflexivity;intros;rewrite;rewrite;rewrite;reflexivity;intros;rewrite;induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;reflexivity
enumFromTo_Int_iterates',GHC/Enum.v,17,rewrite;case;rewrite;f_equal;rewrite;omega;rewrite;f_equal;case;subst;rewrite;simpl;rewrite;simpl;auto;apply;omega
eftInt_aux_unroll,GHC/Enum.v,15,revert;induction;intros;subst;simpl;rewrite;reflexivity;intros;simpl;rewrite;simpl;rewrite;reflexivity;apply;omega
eq_replace_r,GHC/Base.v,7,intros;rewrite;apply;apply;apply;apply;apply
N_popcount_Nsucc_double,Data/Bits/Popcount.v,8,intros;unfold;destruct;simpl;reflexivity;simpl;rewrite;reflexivity
EqExact_Data_Either_Either,Data/Either.v,14,constructor;intros;destruct;simpl;constructor;reflexivity;apply;apply;apply;apply;apply;apply;apply;apply
Pos_popcount_pow2,Data/Bits/Popcount.v,8,intros;simpl;induction;simpl;reflexivity;simpl;rewrite;reflexivity
Foldable_any_app,Data/Foldable.v,1819,intros;unfold;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite
Eq_eq_Word,GHC/Base.v,9,apply;split;intro;rewrite;apply;exact;rewrite;apply;exact
unzip_zip,GHC/List.v,14,intros;unfold;induction;simpl;rewrite;reflexivity;destruct;simpl;destruct;rewrite;simpl;rewrite;reflexivity;reflexivity
iterates'_In,GHC/Enum.v,25,split;intros;destruct;exists;split;apply;rewrite;apply;apply;apply;apply;apply;auto;destruct;rewrite;apply;apply;destruct;exists;split;apply;apply;apply;apply;auto
Foldable_length_nil,Data/Foldable.v,2,simpl;reflexivity
lines_def,Data/OldList.v,12,unfold;destruct;simpl;reflexivity;simpl;destruct;rewrite;destruct;simpl;reflexivity;simpl;reflexivity
eq_replace_l,GHC/Base.v,8,move;apply;apply;apply;apply;apply;apply;apply
hs_coq_foldl'_list,Data/Foldable.v,4,rewrite;move;elim;rewrite
instance_MonadLaws_Data_Either_Either,Data/Either.v,36,split;intros;unfold;destruct;simpl;rewrite;reflexivity;simpl;reflexivity;intros;unfold;destruct;simpl;reflexivity;intros;unfold;destruct;simpl;reflexivity;rewrite;reflexivity;intros;unfold;destruct;simpl;reflexivity;reflexivity;intros;unfold;reflexivity;intros;unfold;destruct;simpl;reflexivity;reflexivity
eftInt_aux_pf,../base/GHC/Enum.v,8,intros;apply;assumption;apply;unfold;apply;apply;assumption
parametric_eq_sym,GHC/Base.v,5,intros;unfold;intros;apply;apply
foldr_initial,GHC/Base.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
instance_SemigroupLaws_option,GHC/Base.v,11,constructor;intros;rewrite;case;case;case;simpl;auto;rewrite;rewrite;rewrite
Build_EqLaws_reflect,GHC/Base.v,15,constructor;intros;apply;apply;reflexivity;intros;apply;apply;apply;intros;apply;apply;apply;intros;apply
N_popcount_diff,Data/Bits/Popcount.v,19,intros;destruct;simpl;reflexivity;rewrite;rewrite;rewrite;rewrite;reflexivity;rewrite;rewrite;rewrite;reflexivity;rewrite;rewrite;reflexivity;rewrite;rewrite;reflexivity
In_zip_swap,GHC/List.v,17,intros;induction;simpl;contradiction;destruct;simpl;contradiction;simpl;destruct;subst;simpl;left;reflexivity;right;apply;simpl;assumption
Eq_Symmetric,GHC/Base.v,3,intros;apply;exact
List_foldl_foldr,GHC/List.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
instance_SemigroupLaws_unit,GHC/Base.v,4,split;intros;simpl;reflexivity
dropWhile_cons_prop,../base/Data/OldList.v,19,intros;rewrite;induction;simpl;destruct;apply;discriminate;reflexivity;simpl;destruct;apply;apply;rewrite;discriminate;rewrite;inversion;subst;apply;assumption
iterates'_length,GHC/Enum.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
hs_coq_reverse,GHC/List.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
instance_ApplicativeLaws_Data_Either_Either,Data/Either.v,26,split;repeat;unfold;intros;destruct;simpl;auto;intros;destruct;destruct;destruct;simpl;auto;intros;simpl;reflexivity;intros;destruct;simpl;auto;intros;simpl;reflexivity;intros;simpl;reflexivity
fst_pair,Data/Tuple.v,3,unfold;simpl;reflexivity
hs_coq_foldl_list',Data/Foldable.v,4,rewrite;move;elim;rewrite
instance_FunctorLaws_identity,Data/Functor/Identity.v,9,constructor;intros;destruct;simpl;reflexivity;intros;destruct;simpl;reflexivity
iter_plus_nat,GHC/Enum.v,8,induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;reflexivity
Foldable_foldr_cons,Data/Foldable.v,4,intros;unfold;rewrite;reflexivity
lines_cons,Data/OldList.v,19,intros;rewrite;destruct;simpl;rewrite;reflexivity;simpl;rewrite;destruct;rewrite;destruct;simpl;reflexivity;simpl;rewrite;reflexivity;apply;simpl;omega
Foldable_foldl'_app,Data/Foldable.v,5,intros;unfold;rewrite;rewrite;reflexivity
flat_map_cons_id,GHC/Base.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
Eq_eq_Int,GHC/Base.v,6,rewrite;split;intro;rewrite;apply;apply
mapAccumL_cons,Data/Traversable.v,10,intros;simpl;rewrite;unfold;rewrite;simpl;rewrite;destruct;destruct;reflexivity
Eq_Equivalence,GHC/Base.v,6,intros;constructor;intros;apply;apply;apply
break_length,../base/Data/OldList.v,15,intros;induction;simpl;rewrite;apply;simpl;destruct;apply;rewrite;reflexivity;destruct;apply;simpl;apply;apply
Neq_sym,GHC/Base.v,4,move;rewrite;rewrite;rewrite
mapAccumL_nil,Data/Traversable.v,4,intros;simpl;rewrite;reflexivity
Eq_m,GHC/Base.v,0,
EqExact_Proxy,Data/Proxy.v,12,constructor;intros;destruct;simpl;apply;split;intros;subst;reflexivity;inversion;subst;reflexivity
Neq_atrans,GHC/Base.v,7,move;apply;apply;apply;apply;apply;apply
reverse_unit,GHC/List.v,7,intros;induction;simpl;reflexivity;simpl;rewrite;reflexivity
hs_coq_partition,Data/OldList.v,12,induction;simpl;reflexivity;simpl;rewrite;destruct;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity
Eq_Reflexive,GHC/Base.v,2,intros;apply
reverse_append,GHC/List.v,8,induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;reflexivity
N_popcount_1_pow2,Data/Bits/Popcount.v,11,intros;destruct;simpl;discriminate;exists;rewrite;apply;destruct;rewrite;rewrite;reflexivity
iterates_length,GHC/Enum.v,3,rewrite;rewrite;reflexivity
Pop_popcount_diff,Data/Bits/Popcount.v,11,intros;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;reflexivity
elem_eq,Data/Foldable.v,8,intros;unfold;apply;unfold;unfold;simpl;apply;apply
length_zip,GHC/List.v,14,intros;induction;simpl;rewrite;reflexivity;destruct;simpl;discriminate;simpl;rewrite;reflexivity;simpl;inversion;reflexivity
In_zip_fst,GHC/List.v,22,intros;induction;simpl;destruct;destruct;simpl;destruct;simpl;destruct;exists;simpl;left;reflexivity;apply;destruct;exists;simpl;right;assumption;simpl;rewrite;reflexivity
instance_ApplicativeLaws_option,GHC/Base.v,23,split;intros;simpl;reflexivity;split;intros;simpl;reflexivity;split;intros;simpl;reflexivity;split;intros;simpl;reflexivity;split;intros;simpl;reflexivity;intros;simpl;reflexivity
N_popcount_pow2,Data/Bits/Popcount.v,13,intros;unfold;rewrite;destruct;apply;rewrite;reflexivity;simpl;rewrite;apply;apply;apply;apply
snd_unzip_map,GHC/List.v,9,intros;unfold;unfold;induction;simpl;reflexivity;simpl;rewrite;reflexivity
words_cons,Data/OldList.v,17,intros;unfold;simpl;destruct;rewrite;simpl;reflexivity;destruct;assert;rewrite;reflexivity;assert;apply;assumption;rewrite;rewrite;reflexivity
dropWhile_cons_length,../base/Data/OldList.v,17,intros;induction;simpl;rewrite;simpl;apply;apply;simpl;destruct;apply;rewrite;reflexivity;simpl;apply;apply;rewrite;reflexivity
words_nil,Data/OldList.v,3,simpl;rewrite;reflexivity
forM_map,Data/Traversable.v,7,intros;unfold;rewrite;rewrite;rewrite;rewrite;reflexivity
flat_map_app,GHC/Base.v,7,induction;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity
parametric_eq_trans,GHC/Base.v,7,intros;unfold;unfold;destruct;intros;apply;assumption
safeSubN_sub,../base/GHC/Num.v,6,intros;unfold;rewrite;apply;apply;auto
EqExact_pair,GHC/Base.v,36,constructor;intros;rewrite;case;case;constructor;subst;reflexivity;constructor;subst;rewrite;reflexivity;constructor;subst;rewrite;reflexivity;constructor;subst;rewrite;reflexivity;constructor;subst;rewrite;reflexivity;constructor;subst;rewrite;reflexivity;constructor;subst;rewrite;reflexivity;constructor;subst;rewrite;reflexivity
hs_coq_map,GHC/Base.v,2,unfold;reflexivity
map_id,GHC/Base.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
instance_SemigroupLaws_list,GHC/Base.v,5,constructor;intros;rewrite;rewrite;apply
instance_MonadLaws_option,GHC/Base.v,21,split;intros;simpl;destruct;simpl;auto;destruct;simpl;auto;destruct;simpl;auto;destruct;simpl;auto;destruct;simpl;auto;destruct;simpl;auto
iterates'_ext,GHC/Enum.v,8,intros;induction;simpl;reflexivity;simpl;rewrite;rewrite;reflexivity
Neq_neq,GHC/Base.v,5,rewrite;case;constructor;constructor;apply
unzip_equal_length,GHC/List.v,13,intros;unfold;induction;simpl;inversion;reflexivity;destruct;simpl;injection;subst;rewrite;reflexivity;reflexivity
elem_nil,Data/Foldable.v,6,intros;unfold;simpl;rewrite;simpl;apply
instance_ApplicativeLaws_identity,Data/Functor/Identity.v,16,constructor;intros;destruct;reflexivity;destruct;reflexivity;destruct;reflexivity;destruct;reflexivity;destruct;reflexivity;destruct;reflexivity;destruct;reflexivity
hs_coq_length_list',Data/Foldable.v,2,unfold;apply
instance_SemigroupLaws_comparison,GHC/Base.v,17,split;intros;destruct;simpl;auto;rewrite;destruct;simpl;auto;rewrite;destruct;simpl;auto;rewrite;destruct;simpl;auto
EqExact_comparison,GHC/Base.v,5,constructor;intros;case;apply;apply
simpl_list_nil_eq,GHC/Base.v,2,simpl;reflexivity
Foldable_foldl'_nil,Data/Foldable.v,4,intros;unfold;simpl;reflexivity
Foldable_elem_proper,Data/Foldable.v,14,intros;unfold;unfold;unfold;simpl;unfold;unfold;unfold;unfold;simpl;intros;apply;rewrite;reflexivity
simpl_option_some_eq,GHC/Base.v,9,destruct;apply;rewrite;simpl;reflexivity;apply;rewrite;simpl;reflexivity
hs_coq_foldr_list',Data/Foldable.v,2,rewrite;reflexivity
instance_MonoidLaws_comparison,GHC/Base.v,36,split;intros;rewrite;rewrite;rewrite;destruct;simpl;reflexivity;intros;rewrite;rewrite;rewrite;destruct;simpl;reflexivity;intros;rewrite;rewrite;rewrite;destruct;simpl;reflexivity;intros;rewrite;rewrite;induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;destruct;simpl;rewrite;reflexivity
instance_ApplicativeLaws_list,GHC/Base.v,24,split;intros;simpl;rewrite;rewrite;reflexivity;rewrite;rewrite;reflexivity;rewrite;rewrite;reflexivity;rewrite;rewrite;reflexivity;rewrite;rewrite;reflexivity;rewrite;rewrite;reflexivity;rewrite;rewrite;reflexivity
flat_map_concat_map,GHC/Base.v,7,induction;simpl;reflexivity;simpl;rewrite;rewrite;reflexivity
map_snd_zip,GHC/List.v,14,intros;induction;simpl;rewrite;reflexivity;destruct;simpl;discriminate;simpl;rewrite;reflexivity;simpl;apply;assumption
iter_plus_N,GHC/Enum.v,8,induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;reflexivity
EqLaws_Data_Either_Either,Data/Either.v,0,
instance_MonoidLaws_unit,GHC/Base.v,23,split;intros;simpl;rewrite;rewrite;simpl;reflexivity;intros;simpl;rewrite;rewrite;simpl;reflexivity;intros;simpl;rewrite;simpl;reflexivity;intros;simpl;rewrite;simpl;reflexivity
Eq_Transitive,GHC/Base.v,8,intros;apply;auto;apply;auto;apply;apply;assumption
EqLaws_Int,GHC/Base.v,19,constructor;intros;unfold;rewrite;apply;intros;unfold;rewrite;apply;intros;unfold;rewrite;apply;intros;unfold;rewrite;rewrite;rewrite;rewrite
Neq_irrefl,GHC/Base.v,6,unfold;intros;apply;rewrite;apply;contradiction
take_drop,GHC/List.v,19,intros;induction;simpl;rewrite;reflexivity;simpl;destruct;apply;rewrite;simpl;rewrite;reflexivity;apply;rewrite;rewrite;rewrite;rewrite;reflexivity;lia
Foldable_foldl_nil,Data/Foldable.v,3,intros;unfold;apply
Foldable_foldr_nil,Data/Foldable.v,4,intros;unfold;simpl;reflexivity
hs_coq_lenAcc,GHC/List.v,7,induction;simpl;rewrite;reflexivity;rewrite;rewrite;reflexivity
fmfm,GHC/Base.v,9,induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;rewrite;reflexivity
hs_coq_foldr_base,GHC/Base.v,14,unfold;unfold;apply;intros;apply;intros;apply;intros;induction;simpl;reflexivity;simpl;rewrite;reflexivity
instance_FunctorLaws_list,GHC/Base.v,7,split;intros;rewrite;reflexivity;intros;rewrite;reflexivity
hs_coq_tuple_fst,Data/Tuple.v,3,destruct;simpl;reflexivity
instance_FunctorLaws_Data_Either_Either,Data/Either.v,10,split;intros;destruct;simpl;reflexivity;destruct;simpl;reflexivity;rewrite;reflexivity
eftInt_In,GHC/Enum.v,13,split;intros;rewrite;destruct;apply;exfalso;apply;apply;apply;destruct;rewrite;apply;auto
EqExact_list,GHC/Base.v,18,constructor;intros;unfold;rewrite;rewrite;elim;constructor;rewrite;constructor;rewrite;constructor;rewrite;move;apply;apply;rewrite;apply;rewrite
Foldable_any_cons,Data/Foldable.v,11,intros;simpl;rewrite;rewrite;rewrite;rewrite;simpl;rewrite;rewrite;rewrite;reflexivity
Foldable_foldr_app,Data/Foldable.v,9,intros;unfold;rewrite;induction;simpl;reflexivity;simpl;rewrite;reflexivity
foldr_nil,GHC/Base.v,3,unfold;simpl;reflexivity
map_map,GHC/Base.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
instance_MonadLaws_identity,Data/Functor/Identity.v,6,constructor;intros;cbn;repeat;destruct;reflexivity
Foldable_any_nil,Data/Foldable.v,9,intros;unfold;simpl;rewrite;simpl;rewrite;simpl;rewrite;reflexivity
simpl_option_none_eq,GHC/Base.v,2,simpl;reflexivity
instance_MonadLaws_list,GHC/Base.v,11,split;intros;simpl;rewrite;reflexivity;reflexivity;rewrite;reflexivity;reflexivity;reflexivity;reflexivity
reverse_nil,GHC/List.v,2,simpl;reflexivity
zip_unzip_map,GHC/List.v,15,intros;unfold;induction;simpl;reflexivity;destruct;simpl;rewrite;clear;unfold;simpl;rewrite;simpl;rewrite;reflexivity
EqLaws_pair,GHC/Base.v,40,constructor;intros;simpl;apply;split;apply;apply;intros;simpl;intros;destruct;apply;apply;destruct;destruct;split;apply;apply;assumption;intros;simpl;intros;apply;apply;destruct;destruct;apply;apply;destruct;destruct;split;apply;apply;assumption;intros;simpl;unfold;rewrite;rewrite;reflexivity
EqExact_unit,GHC/Base.v,6,constructor;intros;destruct;simpl;constructor;reflexivity
EqExact_Word,GHC/Base.v,6,constructor;unfold;intros;rewrite;rewrite;reflexivity
length_app,GHC/List.v,9,induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;rewrite;reflexivity
Foldable_foldl_app,Data/Foldable.v,9,intros;induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;reflexivity
hs_coq_list_length,GHC/List.v,7,induction;simpl;reflexivity;rewrite;simpl;rewrite;reflexivity
iterates_map,GHC/Enum.v,8,rewrite;rewrite;rewrite;f_equal;apply;intros;rewrite;reflexivity
N_popcount_Ndouble,Data/Bits/Popcount.v,8,intros;unfold;destruct;simpl;reflexivity;simpl;rewrite;reflexivity
EqExact_bool,GHC/Base.v,3,constructor;intros;apply
iterates'_map,GHC/Enum.v,10,induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;unfold;simpl;reflexivity
Neq_inv,GHC/Base.v,3,intros;rewrite;reflexivity
map_cong,GHC/Base.v,8,intros;induction;simpl;reflexivity;simpl;rewrite;rewrite;reflexivity
EqLaws_list,GHC/Base.v,0,
hs_coq_foldr_list,Data/Foldable.v,7,unfold;induction;simpl;reflexivity;simpl;rewrite;reflexivity
EqLaws_comparison,GHC/Base.v,20,constructor;intros;unfold;unfold;simpl;destruct;unfold;intros;apply;intros;apply;assumption;intros;apply;assumption;intros;unfold;simpl;destruct;reflexivity
iterates_iterates',GHC/Enum.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
simpl_list_cons_eq,GHC/Base.v,16,rewrite;rewrite;destruct;simpl;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite;rewrite
flat_map_cons_f,GHC/Base.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
EqLaws_Word,GHC/Base.v,10,constructor;move;rewrite;move;rewrite;move;rewrite;move;rewrite;rewrite
In_zip_map,GHC/List.v,11,intros;induction;simpl;contradiction;simpl;destruct;inversion;subst;reflexivity;apply;assumption
EqLaws_bool,GHC/Base.v,0,
hs_coq_foldl_list,Data/Foldable.v,4,rewrite;move;elim;rewrite
reverse_involutive,GHC/List.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
map_append,GHC/Base.v,7,induction;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity
EqLaws_option,GHC/Base.v,25,constructor;intros;simpl;auto;intros;simpl;destruct;auto;intros;simpl;destruct;destruct;auto;destruct;destruct;auto;destruct;destruct;auto;destruct;destruct;auto;intros;simpl;auto
EqLaws_unit,GHC/Base.v,17,constructor;intros;destruct;simpl;reflexivity;intros;destruct;simpl;reflexivity;intros;destruct;simpl;reflexivity;intros;destruct;simpl;reflexivity
concat_map,GHC/Base.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
length_cons,GHC/List.v,3,simpl;rewrite;reflexivity
foldr_id,GHC/Base.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
instance_FunctorLaws_option,GHC/Base.v,9,split;intros;destruct;simpl;reflexivity;intros;destruct;simpl;reflexivity
flat_map_map,GHC/Base.v,3,rewrite;rewrite;reflexivity
Foldable_elem_app,Data/Foldable.v,16,intros;unfold;unfold;unfold;unfold;simpl;induction;simpl;rewrite;reflexivity;simpl;rewrite;f_equal;unfold;rewrite;reflexivity
EqExact_Down,Data/Ord.v,0,
iter_plus_Z,GHC/Enum.v,8,induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;reflexivity
iterates_ext,GHC/Enum.v,5,move;rewrite;rewrite;apply;done
length_nil,GHC/List.v,2,simpl;reflexivity
enumFromTo_Int_In,GHC/Enum.v,14,rewrite;case;simpl;split;intros;omega;destruct;apply;auto;split;intros;omega;apply;auto
eftInt_iterates',GHC/Enum.v,19,unfold;case;rewrite;rewrite;apply;rewrite;rewrite;omega;rewrite;omega;rewrite;reflexivity;rewrite;rewrite;rewrite;simpl;rewrite;omega;reflexivity
In_zip,GHC/List.v,17,intros;induction;simpl;contradiction;destruct;simpl;contradiction;simpl;injection;subst;split;left;reflexivity;left;reflexivity;apply;apply
instance_MonoidLaws_option,GHC/Base.v,26,split;intros;destruct;simpl;rewrite;reflexivity;intros;destruct;simpl;rewrite;reflexivity;intros;destruct;simpl;rewrite;reflexivity;rewrite;reflexivity;intros;simpl;rewrite;induction;simpl;reflexivity;rewrite;reflexivity
eftInt_aux_In,GHC/Enum.v,39,split;intros;induction;rewrite;apply;exists;split;apply;reflexivity;rewrite;apply;destruct;exists;split;apply;rewrite;apply;apply;apply;apply;apply;apply;apply;apply;apply;apply;apply;apply;destruct;apply;apply;exists;split;apply;rewrite;apply;apply;apply;apply
snd_unzip,GHC/List.v,8,intros;unfold;induction;simpl;reflexivity;simpl;rewrite;reflexivity
N_double_succ,Data/Bits/Popcount.v,7,intros;unfold;rewrite;rewrite;rewrite;rewrite;reflexivity
Pos_popcount_1_Is_power,Data/Bits/Popcount.v,9,intros;unfold;destruct;simpl;discriminate;rewrite;constructor;discriminate;discriminate
hs_coq_tuple_snd,Data/Tuple.v,3,destruct;simpl;reflexivity
In_zip_snd,GHC/List.v,22,intros;induction;simpl;destruct;destruct;simpl;destruct;simpl;destruct;exists;simpl;left;reflexivity;apply;destruct;exists;simpl;right;assumption;simpl;rewrite;reflexivity
snd_pair,Data/Tuple.v,3,unfold;destruct;reflexivity
Foldable_foldr_map,Data/Foldable.v,8,induction;simpl;rewrite;reflexivity;simpl;rewrite;rewrite;reflexivity
Foldable_foldl_cons,Data/Foldable.v,4,intros;simpl;rewrite;reflexivity
hs_coq_lenAcc_add,GHC/List.v,7,induction;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity
N_popcount_double,Data/Bits/Popcount.v,8,intros;unfold;destruct;simpl;reflexivity;simpl;rewrite;reflexivity
EqLaws_Down,Data/Ord.v,16,constructor;intros;destruct;simpl;apply;destruct;simpl;apply;destruct;simpl;apply;intros;destruct;simpl;rewrite;reflexivity
EqLaws_Proxy,Data/Proxy.v,16,constructor;intros;destruct;simpl;reflexivity;destruct;simpl;intros;reflexivity;destruct;simpl;intros;reflexivity;destruct;simpl;reflexivity
elem_cons,Data/Foldable.v,7,intros;unfold;unfold;simpl;rewrite;rewrite;reflexivity
flat_map_cong,GHC/Base.v,5,intros;rewrite;rewrite;apply;apply
hs_coq_filter,GHC/List.v,10,induction;simpl;reflexivity;simpl;destruct;simpl;rewrite;reflexivity;rewrite;reflexivity
foldr_single,GHC/Base.v,2,simpl;reflexivity
hs_coq_foldl_base,GHC/Base.v,6,induction;simpl;reflexivity;simpl;rewrite;reflexivity
EqExact_Int,GHC/Base.v,13,constructor;unfold;intros;rewrite;rewrite;destruct;constructor;apply;assumption;constructor;intro;apply;contradiction
Eq_is_true_m,GHC/Base.v,7,intros;split;intros;apply;apply;apply;apply
forM_cong,Data/Traversable.v,13,intros;induction;reflexivity;simpl;rewrite;auto;rewrite;auto;apply;right;apply;left;reflexivity
hs_coq_length_list,Data/Foldable.v,1,apply
EqExact_option,GHC/Base.v,19,constructor;intros;destruct;simpl;constructor;reflexivity;move;apply;apply;move;apply;apply;move;apply;apply;move;apply;rewrite;reflexivity
Eq_reflI,GHC/Base.v,3,intros;rewrite;apply
eftInt_aux_iterates,GHC/Enum.v,8,rewrite;rewrite;rewrite;rewrite;rewrite;simpl;reflexivity;apply
