name,file,result,error_type,error
Eq_eq_bool,GHC/Base.v,False,feedback,The reference eqP was not found in the current environment.
iterates_In,GHC/Enum.v,False,feedback,Tactic failure: Incorrect number of goals (expected 2 tactics).
Foldable_length_cons,Data/Foldable.v,False,feedback,The LHS of Z.add_0_r     (_ + 0)%Z does not match any subterm of the goal
flat_map_nil,GHC/Base.v,True,,
flat_map_unpack_cons_f,GHC/List.v,True,,
Foldable_foldl'_cons,Data/Foldable.v,True,,
instance_MonoidLaws_list,GHC/Base.v,False,feedback,"In environment a : Type H : Eq_ a H0 : EqLaws a x : list a Unable to unify ""?M2181 ++ nil = ?M2181"" with ""(nil <<>> x) = x""."
enumFromTo_Int_iterates',GHC/Enum.v,True,,
eftInt_aux_unroll,GHC/Enum.v,False,feedback,"In environment to, from : Int pf : (from <= to)%Z eq : from = to Unable to unify ""from :: nil"" with  ""eftInt_aux_func     (existT (fun y : Int => {x : Int & (x <= y)%Z}) to        (existT (Z.le^~ to) from pf))""."
eq_replace_r,GHC/Base.v,False,feedback,Tactic failure: Incorrect number of goals (expected 1 tactic).
N_popcount_Nsucc_double,Data/Bits/Popcount.v,False,feedback,The reference Pos2SuccDouble.Nsucc_double_spec was not found in the current environment.
EqExact_Data_Either_Either,Data/Either.v,False,feedback,H already used
Pos_popcount_pow2,Data/Bits/Popcount.v,False,feedback,"In environment n : positive IHn : Pos_popcount (2 ^ n) = 1%positive Unable to unify ""1%positive"" with  ""Pos_popcount     (Pos.iter (fun y : positive => (y~0)%positive)        (Pos.iter (fun y : positive => (y~0)%positive) 1%positive n) n)""."
Foldable_any_app,Data/Foldable.v,False,feedback,The LHS of IH     (any (fun y : A => v == y) (xs ++ l2)) does not match any subterm of the goal
Eq_eq_Word,GHC/Base.v,True,,
unzip_zip,GHC/List.v,True,,
iterates'_In,GHC/Enum.v,False,feedback,Not an inductive product.
Foldable_length_nil,Data/Foldable.v,False,feedback,Cannot coerce Foldable__Dict to an evaluable reference.
lines_def,Data/OldList.v,False,feedback,"In environment s : String Hnull : List.null s = true Unable to unify ""nil"" with  ""Wf.Fix_sub String (Wf.MR lt (fun recarg : String => length recarg))     OldList.lines_obligation_2 (fun _ : String => list String)     (fun (recarg : String)        (lines' : {recarg' : String | length recarg' < length recarg} ->                  list String) =>      if List.null recarg      then nil      else       (let        '(h, t) as anonymous' :=         (let          '(l, s') as anonymous' :=           List.break (fun arg_4__ : Char => arg_4__ == newline) recarg           return             (anonymous' =              List.break (fun arg_4__ : Char => arg_4__ == newline) recarg ->              list Char * list (list Char)) in           fun             Heq_anonymous : (l, s') =                             List.break                               (fun arg_4__ : Char => arg_4__ == newline)                               recarg =>           (l,           match s' as s'' return (s'' = s' -> list (list Char)) with           | nil => fun _ : nil = s' => nil           | wildcard' :: s'' =>               fun Heq_s' : wildcard' :: s'' = s' =>               lines'                 (exist                    (fun recarg' : String => length recarg' < length recarg)                    s''                    (OldList.lines_obligation_1 recarg l s' Heq_anonymous                       wildcard' s'' Heq_s'))           end eq_refl)) eq_refl         return           (anonymous' =            (let             '(l, s') as anonymous'0 :=              List.break (fun arg_4__ : Char => arg_4__ == newline) recarg              return                (anonymous'0 =                 List.break (fun arg_4__ : Char => arg_4__ == newline) recarg ->                 list Char * list (list Char)) in              fun                Heq_anonymous : (l, s') =                                List.break                                  (fun arg_4__ : Char => arg_4__ == newline)                                  recarg =>              (l,              match s' as s'' return (s'' = s' -> list (list Char)) with              | nil => fun _ : nil = s' => nil              | wildcard' :: s'' =>                  fun Heq_s' : wildcard' :: s'' = s' =>                  lines'                    (exist                       (fun recarg' : String => length recarg' < length recarg)                       s''                       (OldList.lines_obligation_1 recarg l s' Heq_anonymous                          wildcard' s'' Heq_s'))              end eq_refl)) eq_refl -> list (list Char)) in         fun           _ : (h, t) =               (let                '(l, s') as anonymous' :=                 List.break (fun arg_4__ : Char => arg_4__ == newline) recarg                 return                   (anonymous' =                    List.break (fun arg_4__ : Char => arg_4__ == newline)                      recarg -> list Char * list (list Char)) in                 fun                   Heq_anonymous : (l, s') =                                   List.break                                     (fun arg_4__ : Char => arg_4__ == newline)                                     recarg =>                 (l,                 match s' as s'' return (s'' = s' -> list (list Char)) with                 | nil => fun _ : nil = s' => nil                 | wildcard' :: s'' =>                     fun Heq_s' : wildcard' :: s'' = s' =>                     lines'                       (exist                          (fun recarg' : String =>                           length recarg' < length recarg) s''                          (OldList.lines_obligation_1 recarg l s'                             Heq_anonymous wildcard' s'' Heq_s'))                 end eq_refl)) eq_refl => h :: t) eq_refl) s""."
eq_replace_l,GHC/Base.v,True,,
hs_coq_foldl'_list,Data/Foldable.v,True,,
instance_MonadLaws_Data_Either_Either,Data/Either.v,False,feedback,"In environment a : Type A : Type B : Type a0 : A k : A -> Either a B The term ""a"" has type ""Type"" while it is expected to have type ""A""."
eftInt_aux_pf,../base/GHC/Enum.v,False,feedback,"Unable to apply lemma of type  ""forall n m : Z, (n < m)%Z <-> (n <= m)%Z /\ n <> m"" on hypothesis of type  ""(x <= y)%Z""."
parametric_eq_sym,GHC/Base.v,False,feedback,Applied theorem does not have enough premises.
foldr_initial,GHC/Base.v,True,,
instance_SemigroupLaws_option,GHC/Base.v,False,feedback,The LHS of semigroup_assoc     ((_ <<>> (_ <<>> _)) == ((_ <<>> _) <<>> _)) matches but type classes inference fails
Build_EqLaws_reflect,GHC/Base.v,False,feedback,"In environment t : Type H : Eq_ t Hreflect : forall x y : t, reflect (x = y) (x == y) Hinv : forall x y : t, (x == y) = ~~ (x /= y) y, z : t Hneq_yz : y <> z Unable to unify ""z"" with ""y""."
N_popcount_diff,Data/Bits/Popcount.v,False,feedback,"Found no subterm matching ""N.ldiff 0 ?M1697"" in the current goal."
In_zip_swap,GHC/List.v,True,,
Eq_Symmetric,GHC/Base.v,False,feedback,Applied theorem does not have enough premises.
List_foldl_foldr,GHC/List.v,True,,
instance_SemigroupLaws_unit,GHC/Base.v,False,feedback,The reference Semigroup__unit_op_zlzlzgzg__ was not found in the current environment.
dropWhile_cons_prop,../base/Data/OldList.v,False,feedback,"Found no subterm matching ""c :: s'"" in Hp."
iterates'_length,GHC/Enum.v,False,feedback,"In environment A : Type n' : nat f : A -> A z : A IH : length (iterates' n' f z) = n' Unable to unify ""length (iterates' n' f z) = n'"" with  ""length (iterates' n' f (f z)) = n'""."
hs_coq_reverse,GHC/List.v,False,feedback,"In environment A : Type x : A xs : list A Unable to unify  ""(fix rev (arg_0__ arg_1__ : list A) {struct arg_0__} :     list A :=      match arg_0__ with      | [] => arg_1__      | x :: xs => rev xs (x :: arg_1__)      end) xs [] ++ [x]"" with  ""(fix rev (arg_0__ arg_1__ : list A) {struct arg_0__} :     list A :=      match arg_0__ with      | [] => arg_1__      | x :: xs => rev xs (x :: arg_1__)      end) xs [x]""."
instance_ApplicativeLaws_Data_Either_Either,Data/Either.v,True,,
fst_pair,Data/Tuple.v,True,,
hs_coq_foldl_list',Data/Foldable.v,True,,
instance_FunctorLaws_identity,Data/Functor/Identity.v,True,,
iter_plus_nat,GHC/Enum.v,True,,
Foldable_foldr_cons,Data/Foldable.v,True,,
lines_cons,Data/OldList.v,True,,
Foldable_foldl'_app,Data/Foldable.v,False,feedback,The LHS of fold_left_app     (fold_left _ (_ ++ _) _) does not match any subterm of the goal
flat_map_cons_id,GHC/Base.v,False,feedback,The LHS of map_id     (map id _) does not match any subterm of the goal
Eq_eq_Int,GHC/Base.v,True,,
mapAccumL_cons,Data/Traversable.v,False,feedback,"In environment a : Type b : Type c : Type x : b xs : list b f : a -> b -> a * c s, s' : a y : c s'' : a ys : list c Unable to unify  ""let   '(s'', ys) :=    (let     'Utils.Mk_StateL runStateL :=      foldr        (fun (x : b) (ys : Utils.StateL a (list c)) =>         liftA2 cons ((Utils.Mk_StateL ∘ flip f) x) ys)         (pure nil) xs in runStateL) s' in (s'', y :: ys)"" with  ""(let    'Utils.Mk_StateL runStateL :=     liftA2 cons ((Utils.Mk_StateL ∘ flip f) x)       (foldr          (fun (x : b) (ys : Utils.StateL a (list c)) =>           liftA2 cons ((Utils.Mk_StateL ∘ flip f) x) ys)           (pure nil) xs) in runStateL) s""."
Eq_Equivalence,GHC/Base.v,True,,
break_length,../base/Data/OldList.v,False,feedback,"In environment A : Type p : A -> bool x : A xs, s'' : list A IH : forall w : list A, (w, s'') = List.break p xs -> length s'' <= length xs w : list A Hp : p x = true H : (w, s'') = (nil, x :: xs) H1 : w = nil H2 : s'' = x :: xs Unable to unify ""0 <= ?M1843"" with ""length xs <= length xs""."
Neq_sym,GHC/Base.v,False,feedback,No assumption in ((x /= y) = (y /= x))
mapAccumL_nil,Data/Traversable.v,True,,
Eq_m,GHC/Base.v,False,feedback,Applied theorem does not have enough premises.
EqExact_Proxy,Data/Proxy.v,True,,
Neq_atrans,GHC/Base.v,False,feedback,The LHS of orbT     (_ || true) does not match any subterm of the goal
reverse_unit,GHC/List.v,False,feedback,"Found no subterm matching ""reverse (xs ++ [a])"" in the current goal."
hs_coq_partition,Data/OldList.v,False,feedback,"In environment A : Type p : A -> bool x : A xs : list A IH : foldr (select p) (nil, nil) xs =      (fix partition (l : list A) : list A * list A :=         match l with         | nil => (nil, nil)         | x :: tl =>             let (g, d) := partition tl in             if p x then (x :: g, d) else (g, x :: d)         end) xs Unable to unify  ""let (g, d) :=     (fix partition (l : list A) : list A * list A :=        match l with        | nil => (nil, nil)        | x :: tl =>            let (g, d) := partition tl in            if p x then (x :: g, d) else (g, x :: d)        end) xs in   (x :: g, d)"" with  ""select p x     ((fix partition (l : list A) : list A * list A :=         match l with         | nil => (nil, nil)         | x :: tl =>             let (g, d) := partition tl in             if p x then (x :: g, d) else (g, x :: d)         end) xs)""."
Eq_Reflexive,GHC/Base.v,True,,
reverse_append,GHC/List.v,False,feedback,"Found no subterm matching ""(?M2050 ++ ?M2051) ++ ?M2052"" in the current goal."
N_popcount_1_pow2,Data/Bits/Popcount.v,False,feedback,"Unable to apply lemma of type  ""forall p : positive, Pos_popcount p = 1%positive -> Is_power p"" on hypothesis of type ""N_popcount (N.pos p) = 1%N""."
iterates_length,GHC/Enum.v,False,feedback,(in proof iterates_length): Attempt to save an incomplete proof
Pop_popcount_diff,Data/Bits/Popcount.v,False,add_err,"Syntax error: '|' or ',' or ')' expected after [constr:operconstr level 200] (in [constr:operconstr])."
elem_eq,Data/Foldable.v,False,feedback,Expects a disjunctive pattern with 1 branch or a conjunctive pattern made of 4 patterns.
length_zip,GHC/List.v,True,,
In_zip_fst,GHC/List.v,False,feedback,"Unable to apply lemma of type  ""In (x, y) (zip xt (yh :: yt)) ->   forall zs : list C,   S (Datatypes.length yt) = Datatypes.length zs ->   exists z : C, In (x, z) (zip xt zs)"" on hypothesis of type  ""In (x, y) (zip xt yt)""."
instance_ApplicativeLaws_option,GHC/Base.v,True,,
N_popcount_pow2,Data/Bits/Popcount.v,False,feedback,The reference N.pow_eq_pow was not found in the current environment.
snd_unzip_map,GHC/List.v,False,feedback,"Found no subterm matching ""snd (unzip (map (fun x : a => (f x, g x)) xs))"" in the current goal."
words_cons,Data/OldList.v,False,feedback,"In environment c : Char s : list Char Hspace : Unicode.isSpace c = true Unable to unify ""words s"" with  ""Wf.Fix_sub String (Wf.MR lt (fun recarg : String => length recarg))     OldList.words_obligation_3 (fun _ : String => list String)     (fun (recarg : String)        (words' : {recarg' : String | length recarg' < length recarg} ->                  list String) =>      match        List.dropWhile Unicode.isSpace recarg as anonymous'        return          (anonymous' = List.dropWhile Unicode.isSpace recarg -> list String)      with      | nil => fun _ : nil = List.dropWhile Unicode.isSpace recarg => nil      | c :: l =>          fun Heq_anonymous : c :: l = List.dropWhile Unicode.isSpace recarg          =>          (let           '(w, s'') as anonymous' :=            if Unicode.isSpace c            then (nil, c :: l)            else             let '(ys, zs) := List.break Unicode.isSpace l in (c :: ys, zs)            return              (anonymous' =               (if Unicode.isSpace c                then (nil, c :: l)                else                 let                 '(ys, zs) := List.break Unicode.isSpace l in (c :: ys, zs)) ->               list String) in            fun              Heq_anonymous0 : (w, s'') =                               (if Unicode.isSpace c                                then (nil, c :: l)                                else                                 let                                 '(ys, zs) := List.break Unicode.isSpace l in                                  (c :: ys, zs)) =>            w            :: words'                 (exist                    (fun recarg' : String => length recarg' < length recarg)                    s''                    (OldList.words_obligation_1 recarg                        (c :: l) (OldList.words_obligation_2 c l) Heq_anonymous                       w s'' Heq_anonymous0))) eq_refl      end eq_refl) (c :: s)""."
dropWhile_cons_length,../base/Data/OldList.v,False,feedback,"In environment A : Type c, a : A s : list A p : A -> bool s' : list A Hp : p a = true H : length s' < length s IH : c :: s' = List.dropWhile p s -> length s' < length s Unable to unify ""S (S ?M1803) <= S ?M1804"" with  ""S (length s') <= S (length s)""."
words_nil,Data/OldList.v,True,,
forM_map,Data/Traversable.v,False,feedback,Unable to find an instance for the variable r__.
flat_map_app,GHC/Base.v,True,,
parametric_eq_trans,GHC/Base.v,False,feedback,No such bound variable y (no bound variables at all in the expression).
safeSubN_sub,../base/GHC/Num.v,False,feedback,Omega can't solve this system
EqExact_pair,GHC/Base.v,False,feedback,Wrong bullet -: Current bullet - is not finished.
hs_coq_map,GHC/Base.v,True,,
map_id,GHC/Base.v,False,feedback,id is bound to a notation that does not denote a reference.
instance_SemigroupLaws_list,GHC/Base.v,False,feedback,The reference Semigroup__list_op_zlzlzgzg__ was not found in the current environment.
instance_MonadLaws_option,GHC/Base.v,True,,
iterates'_ext,GHC/Enum.v,True,,
Neq_neq,GHC/Base.v,True,,
unzip_equal_length,GHC/List.v,True,,
elem_nil,Data/Foldable.v,True,,
instance_ApplicativeLaws_identity,Data/Functor/Identity.v,False,feedback,The reference v was not found in the current environment.
hs_coq_length_list',Data/Foldable.v,True,,
instance_SemigroupLaws_comparison,GHC/Base.v,False,feedback,The reference Semigroup__comparison_op_zlzlzgzg__ was not found in the current environment.
EqExact_comparison,GHC/Base.v,True,,
simpl_list_nil_eq,GHC/Base.v,True,,
Foldable_foldl'_nil,Data/Foldable.v,True,,
Foldable_elem_proper,Data/Foldable.v,False,feedback,Applied theorem does not have enough premises.
simpl_option_some_eq,GHC/Base.v,True,,
hs_coq_foldr_list',Data/Foldable.v,True,,
instance_MonoidLaws_comparison,GHC/Base.v,False,feedback,The LHS of IHx     (foldr Base.Monoid__comparison_mappend Base.Monoid__comparison_mempty x ==      foldr        (fun arg_0__ arg_1__ : comparison =>         match arg_0__ with         | Eq => arg_1__         | Lt => Lt         | Gt => Gt         end) Eq x) does not match any subterm of the goal
instance_ApplicativeLaws_list,GHC/Base.v,False,add_err,Syntax error: [rewriter] expected after [orient] (in [oriented_rewriter]).
flat_map_concat_map,GHC/Base.v,True,,
map_snd_zip,GHC/List.v,True,,
iter_plus_N,GHC/Enum.v,False,feedback,The LHS of N.add_succ_l     (N.succ _ + _)%N does not match any subterm of the goal
EqLaws_Data_Either_Either,Data/Either.v,False,feedback,"In environment a : Type b : Type H : Eq_ a H0 : EqLaws a H1 : Eq_ b H2 : EqLaws b x : a Unable to unify ""forall x0 : ?t, x0 == x0"" with ""(Left x == Left x) = true""."
instance_MonoidLaws_unit,GHC/Base.v,False,feedback,The reference Monoid__unit_mappend was not found in the current environment.
Eq_Transitive,GHC/Base.v,False,feedback,Applied theorem does not have enough premises.
EqLaws_Int,GHC/Base.v,True,,
Neq_irrefl,GHC/Base.v,False,feedback,"In environment t : Type H : Eq_ t H0 : EqLaws t x : t x0 : ?t Unable to unify ""(x0 == x0) = true"" with ""False""."
take_drop,GHC/List.v,False,feedback,Expects a disjunctive pattern with 3 branches.
Foldable_foldl_nil,Data/Foldable.v,True,,
Foldable_foldr_nil,Data/Foldable.v,True,,
hs_coq_lenAcc,GHC/List.v,False,feedback,The reference lia was not found in the current environment.
fmfm,GHC/Base.v,True,,
hs_coq_foldr_base,GHC/Base.v,True,,
instance_FunctorLaws_list,GHC/Base.v,False,feedback,The reference Functor__list_fmap was not found in the current environment.
hs_coq_tuple_fst,Data/Tuple.v,True,,
instance_FunctorLaws_Data_Either_Either,Data/Either.v,True,,
eftInt_In,GHC/Enum.v,False,feedback,Omega can't solve this system
EqExact_list,GHC/Base.v,False,feedback,"In environment a : Type H : Eq_ a H0 : EqLaws a H1 : EqExact a x : a xs : list a IH : forall y : list a, reflect (xs = y) (xs == y) y : a ys : list a Hxy : x = y Hxs : xs = ys Unable to unify ""reflect ?M2135 false"" with  ""reflect (x :: xs = y :: ys) (x :: xs == y :: ys)""."
Foldable_any_cons,Data/Foldable.v,True,,
Foldable_foldr_app,Data/Foldable.v,False,feedback,The LHS of fold_right_app     (fold_right _ _ (_ ++ _)) does not match any subterm of the goal
foldr_nil,GHC/Base.v,True,,
map_map,GHC/Base.v,False,feedback,a is already used.
instance_MonadLaws_identity,Data/Functor/Identity.v,False,feedback,The reference m was not found in the current environment.
Foldable_any_nil,Data/Foldable.v,False,feedback,Cannot coerce SemigroupInternal.Mk_Any to an evaluable reference.
simpl_option_none_eq,GHC/Base.v,True,,
instance_MonadLaws_list,GHC/Base.v,False,feedback,The LHS of flat_map_cons_id     (flat_map (cons^~ nil) _) does not match any subterm of the goal
reverse_nil,GHC/List.v,True,,
zip_unzip_map,GHC/List.v,True,,
EqLaws_pair,GHC/Base.v,False,add_err,Syntax error: [tactic:ltac_use_default] expected after [tactic:tactic] (in [vernac:tactic_command]).
EqExact_unit,GHC/Base.v,True,,
EqExact_Word,GHC/Base.v,True,,
length_app,GHC/List.v,False,feedback,The reference Zlength_app was not found in the current environment.
Foldable_foldl_app,Data/Foldable.v,False,feedback,The LHS of hs_coq_foldl_list     (foldl _ _ _) does not match any subterm of the goal
hs_coq_list_length,GHC/List.v,True,,
iterates_map,GHC/Enum.v,True,,
N_popcount_Ndouble,Data/Bits/Popcount.v,False,feedback,"In environment n : N Unable to unify  ""match n with   | 0%N => 0%N   | N.pos p => N.pos (Pos_popcount p)   end"" with  ""match Pos.Ndouble n with   | 0%N => 0%N   | N.pos p => N.pos (Pos_popcount p)   end""."
EqExact_bool,GHC/Base.v,True,,
iterates'_map,GHC/Enum.v,False,feedback,"In environment A : Type n' : nat f : A -> A z : A IH : iterates' n' f z = List.map (fun n : nat => Nat.iter n f z) (seq 0 n') Unable to unify  ""iterates' n' f z = List.map (fun n : nat => Nat.iter n f z) (seq 0 n')"" with  ""iterates' n' f (f z) = List.map (fun n : nat => Nat.iter n f z) (seq 1 n')""."
Neq_inv,GHC/Base.v,False,feedback,"In environment t : Type H : Eq_ t H0 : EqLaws t x, y : t Unable to unify ""(?M1992 == ?M1993) = ~~ (?M1992 /= ?M1993)"" with  ""(x /= y) = ~~ (x == y)""."
map_cong,GHC/Base.v,True,,
EqLaws_list,GHC/Base.v,False,add_err,Syntax error: [tactic:ltac_use_default] expected after [tactic:tactic] (in [vernac:tactic_command]).
hs_coq_foldr_list,Data/Foldable.v,True,,
EqLaws_comparison,GHC/Base.v,True,,
iterates_iterates',GHC/Enum.v,True,,
simpl_list_cons_eq,GHC/Base.v,True,,
flat_map_cons_f,GHC/Base.v,True,,
EqLaws_Word,GHC/Base.v,True,,
In_zip_map,GHC/List.v,True,,
EqLaws_bool,GHC/Base.v,True,,
hs_coq_foldl_list,Data/Foldable.v,True,,
reverse_involutive,GHC/List.v,True,,
map_append,GHC/Base.v,True,,
EqLaws_option,GHC/Base.v,False,feedback,"In environment a : Type H : Eq_ a H0 : EqLaws a Unable to unify ""forall x : ?t, x == x"" with ""true = true""."
EqLaws_unit,GHC/Base.v,True,,
concat_map,GHC/Base.v,True,,
length_cons,GHC/List.v,True,,
foldr_id,GHC/Base.v,True,,
instance_FunctorLaws_option,GHC/Base.v,True,,
flat_map_map,GHC/Base.v,True,,
Foldable_elem_app,Data/Foldable.v,True,,
EqExact_Down,Data/Ord.v,False,feedback,"In environment a : Type H : Eq_ a H0 : EqLaws a H1 : EqExact a x, y : a e : x = y Unable to unify ""reflect ?M2075 false"" with  ""reflect (Mk_Down x = Mk_Down y)     (Eq___Down (Down a -> Down a -> bool) (op_zeze____ (Down a))         (Mk_Down x) (Mk_Down y))""."
iter_plus_Z,GHC/Enum.v,False,feedback,The LHS of Z.add_succ_l     (Z.succ _ + _)%Z does not match any subterm of the goal
iterates_ext,GHC/Enum.v,True,,
length_nil,GHC/List.v,True,,
enumFromTo_Int_In,GHC/Enum.v,True,,
eftInt_iterates',GHC/Enum.v,False,feedback,The LHS of iterates'_length     (length (iterates' _ _ _)) does not match any subterm of the goal
In_zip,GHC/List.v,True,,
instance_MonoidLaws_option,GHC/Base.v,False,feedback,No such goal. Focus next goal with bullet -.
eftInt_aux_In,GHC/Enum.v,False,feedback,"Unable to apply lemma of type  ""forall n m p : Z, (n <= m)%Z <-> (n + p <= m + p)%Z"" on hypothesis of type  ""i <= Z.to_nat (to - from)""."
snd_unzip,GHC/List.v,False,feedback,"Found no subterm matching ""snd                              (Base.foldr                                 (fun (arg_0__ : a * b)                                    (arg_1__ : list a * list b) =>                                  let (a0, b0) := arg_0__ in                                  let (as_, bs) := arg_1__ in                                  (a0 :: as_, b0 :: bs))                                  ([], []) xs)"" in the current goal."
N_double_succ,Data/Bits/Popcount.v,True,,
Pos_popcount_1_Is_power,Data/Bits/Popcount.v,False,feedback,Not a discriminable equality.
hs_coq_tuple_snd,Data/Tuple.v,True,,
In_zip_snd,GHC/List.v,True,,
snd_pair,Data/Tuple.v,True,,
Foldable_foldr_map,Data/Foldable.v,False,feedback,The LHS of IH     (foldr (g ∘ f) b0 xs) does not match any subterm of the goal
Foldable_foldl_cons,Data/Foldable.v,True,,
hs_coq_lenAcc_add,GHC/List.v,False,feedback,"Found no subterm matching ""lenAcc xs (acc1 + acc2)%Z"" in the current goal."
N_popcount_double,Data/Bits/Popcount.v,False,feedback,"Found no subterm matching ""N.pos (Pos_popcount p)"" in the current goal."
EqLaws_Down,Data/Ord.v,False,feedback,Wrong bullet -: Current bullet - is not finished.
EqLaws_Proxy,Data/Proxy.v,False,feedback,No assumption in ((Mk_Proxy == Mk_Proxy) = true)
elem_cons,Data/Foldable.v,True,,
flat_map_cong,GHC/Base.v,True,,
hs_coq_filter,GHC/List.v,True,,
foldr_single,GHC/Base.v,True,,
hs_coq_foldl_base,GHC/Base.v,False,feedback,The LHS of IH     (fold_right (fun (v : A) (fn : B -> B) (z : B) => fn (f z v))        Datatypes.id xs z) does not match any subterm of the goal
EqExact_Int,GHC/Base.v,True,,
Eq_is_true_m,GHC/Base.v,False,add_err,Syntax error: [tactic:ltac_use_default] expected after [tactic:tactic] (in [vernac:tactic_command]).
forM_cong,Data/Traversable.v,False,feedback,Not an inductive product.
hs_coq_length_list,Data/Foldable.v,True,,
EqExact_option,GHC/Base.v,False,feedback,The reference Eq___option_op_zeze__ was not found in the current environment.
Eq_reflI,GHC/Base.v,False,feedback,H is already used.
eftInt_aux_iterates,GHC/Enum.v,False,feedback,The reference from was not found in the current environment.
