name,file,tactics_count,tactics
trace_outputs_backup,systems/Counter.v,3,intros;simpl;reflexivity
reachable_seen,systems/SeqNumCorrect.v,50,unfold;intros;destruct;induction;simpl;unfold;simpl;destruct;unfold;simpl;unfold;simpl;unfold;simpl;intros;discriminate;destruct;destruct;inversion;subst;simpl;unfold;simpl;intros;destruct;subst;simpl;destruct;apply;assumption;contradiction;apply;assumption;unfold;simpl;intros;destruct;subst;simpl;destruct;apply;assumption;contradiction;apply;assumption;unfold;simpl;intros;apply;assumption
refl_trans_1n_trace_trans,core/Net.v,9,intros;induction;apply;assumption;apply;apply;rewrite;apply;assumption
last_holder'_neq_unlock_extend,systems/LiveLockServ.v,13,intros;unfold;destruct;inversion;subst;rewrite;simpl;rewrite;simpl;rewrite;simpl;reflexivity;discriminate
locks_correct_locked_at_head,systems/LiveLockServ.v,7,intros;unfold;destruct;unfold;rewrite;rewrite;assumption
trace_outputs_input,systems/Counter.v,3,intros;simpl;reflexivity
revertNetwork_In,systems/SeqNumCorrect.v,5,intros;unfold;simpl;apply;assumption
reachable_intro,systems/LockServ.v,4,intros;unfold;exists;assumption
locks_correct_update_true,systems/LiveLockServ.v,13,intros;unfold;intros;destruct;subst;rewrite;inversion;subst;apply;rewrite;assumption;apply;apply
nwnw_locked_lock,systems/LiveLockServ.v,13,intros;unfold;specialize;destruct;congruence;specialize;destruct;congruence;reflexivity;exfalso;apply;split;congruence
LockServ_mutual_exclusion_trace,systems/LockServ.v,94,intros;induction;split;unfold;intros;inversion;split;intros;inversion;intros;inversion;destruct;destruct;split;unfold;intros;apply;destruct;apply;assumption;simpl;destruct;subst;clear;unfold;destruct;simpl;discriminate;destruct;destruct;discriminate;inversion;subst;unfold;destruct;congruence;simpl;intros;destruct;subst;rewrite;discriminate;apply;assumption;contradiction;split;intros;apply;destruct;apply;assumption;simpl;destruct;subst;clear;unfold;destruct;simpl;discriminate;destruct;destruct;discriminate;inversion;subst;unfold;destruct;congruence;simpl;destruct;subst;rewrite;discriminate;assumption;contradiction;intros;unfold;destruct;simpl;discriminate;destruct;destruct;discriminate;inversion;subst;unfold;destruct;congruence;simpl;destruct;subst;apply;assumption;apply;assumption
inductive_invariant_true_in_reachable,core/Net.v,8,intros;unfold;intros;induction;apply;assumption;apply;assumption
locks_correct_input_handlers,systems/LiveLockServ.v,11,intros;unfold;intros;destruct;subst;rewrite;apply;eauto;rewrite;auto;apply
step_failure_pt_mapped_simulation_1,core/PartialMapSimulations.v,19,intros;inversion;subst;simpl;left;apply;auto;left;apply;auto;left;apply;auto;right;split;auto;split;auto;apply
in_tot_map_name,core/TotalMapSimulations.v,9,intros;apply;destruct;simpl;inversion;subst;apply;subst;assumption
nodup_pt_map,core/PartialMapSimulations.v,0,
at_head_of_queue_intro,systems/LockServ.v,4,intros;unfold;rewrite;reflexivity
lb_step_ordered_failure_pt_mapped_simulation_1_non_silent,core/PartialMapExecutionSimulations.v,27,intros;inversion;subst;split;inversion;subst;constructor;apply;assumption;simpl;rewrite;reflexivity;constructor;apply;assumption;simpl;rewrite;reflexivity;constructor;apply;assumption;simpl;rewrite;reflexivity;simpl;rewrite;apply
mgv_reghost_deghost_partial_inverses,core/GhostSimulations.v,14,intros;unfold;destruct;simpl;f_equal;apply;intros;destruct;reflexivity;apply;intros;destruct;simpl;reflexivity
snoc_at_head_of_queue_preserved,systems/LockServ.v,13,intros;unfold;simpl;destruct;simpl;subst;simpl;discriminate;simpl;inversion;subst;simpl;assumption
distinct_pairs_and_app,core/StatePacketPacketDecomposition.v,20,intros;induction;simpl;assumption;simpl;apply;apply;apply;apply;assumption;intros;apply;destruct;apply;right;assumption;apply;left;reflexivity;assumption
step_async_tot_mapped_simulation_2,core/TotalMapSimulations.v,0,
Lock_delivered_MsgLock,systems/LiveLockServ.v,4,intros;unfold;simpl;reflexivity
locks_correct_locked_at_head_preserved,systems/LiveLockServ.v,10,intros;unfold;intros;specialize;destruct;exists;split;apply;assumption;assumption
Unlock_in_network_eventually_MsgUnlock,systems/LiveLockServ.v,23,intros;unfold;destruct;unfold;apply;intros;unfold;destruct;simpl;destruct;simpl;contradiction;destruct;simpl;contradiction;destruct;contradiction;subst;simpl;assumption;exists;simpl;assumption
nwnw_unlock_lock,systems/LiveLockServ.v,18,intros;unfold;specialize;destruct;destruct;reflexivity;exfalso;apply;auto;exfalso;apply;auto;exfalso;apply;auto;exfalso;apply;auto
disk_correct_reboot,systems/LogCorrect.v,18,intros;unfold;destruct;destruct;inversion;subst;unfold;intros;specialize;destruct;simpl;rewrite;rewrite;reflexivity;simpl;rewrite;rewrite;reflexivity
distinct_pairs_and_app_cons,core/StatePacketPacketDecomposition.v,13,intros;subst;induction;simpl;inversion;subst;assumption;simpl;inversion;subst;apply;constructor;assumption
LockServ_nwnw_net_handlers_old_new,systems/LockServ.v,11,intros;unfold;intros;destruct;apply;subst;specialize;assumption;apply;specialize;assumption
dup_drop_step_star_step_1,core/DupDropReordering.v,3,intros;apply;assumption
pt_map_map_pair_eq,core/PartialMapSimulations.v,27,intros;unfold;destruct;discriminate;inversion;subst;clear;apply;unfold;rewrite;apply;apply;intros;unfold;destruct;auto;apply;congruence;intros;unfold;destruct;auto;apply;congruence;apply;apply;apply
trace_mutual_exclusion'_extend_input,systems/LockServ.v,32,intros;unfold;intros;apply;apply;destruct;apply;eauto;destruct;contradiction;inversion;subst;destruct;contradiction;apply;eauto;destruct;contradiction;inversion;subst;destruct;contradiction;apply;eauto;destruct;contradiction;destruct;contradiction;inversion;inversion;subst;contradiction
step_ordered_dynamic_failure_pt_mapped_simulation_star_1,core/PartialMapSimulations.v,0,
mgv_ghost_simulation_1,core/GhostSimulations.v,27,intros;inversion;subst;apply;auto;unfold;simpl;rewrite;simpl;rewrite;auto;apply;auto;unfold;simpl;rewrite;simpl;rewrite;auto;apply;auto;unfold;simpl;rewrite;simpl;rewrite;auto
true_in_reachable_mutual_exclusion,systems/LiveLockServ.v,12,apply;intros;unfold;intros;destruct;destruct;congruence;assert;admit;subst;reflexivity;congruence
locks_correct_update_false,systems/LiveLockServ.v,12,intros;unfold;intros;destruct;subst;rewrite;rewrite;simpl;auto;rewrite;auto;apply
last_holder'_input_extend,systems/LiveLockServ.v,31,intros;unfold;destruct;apply;destruct;rewrite;discriminate;simpl;destruct;destruct;discriminate;destruct;discriminate;rewrite;discriminate;apply;apply;exfalso;apply;intros;apply;destruct;apply;assumption;simpl;destruct;inversion;subst;simpl;rewrite;reflexivity
LockServ_nwnw_input_handlers_new_new,systems/LiveLockServ.v,33,intros;unfold;intros;apply;destruct;inversion;subst;apply;destruct;inversion;subst;destruct;destruct;simpl;destruct;subst;right;exists;split;auto;split;auto;intros;apply;apply;exists;auto;left;intros;apply;apply;exists;auto
PrimaryNetHandler_no_msgs,systems/Counter.v,6,intros;unfold;destruct;inversion;subst;reflexivity
log_input_handlers_spec,systems/LogCorrect.v,32,intros;unfold;break_match;discriminate;find_inversion;unfold;intros;specialize;destruct;simpl;destruct;subst;simpl;rewrite;rewrite;assumption;rewrite;auto;rewrite;auto;assumption;destruct;subst;simpl;rewrite;rewrite;assumption;rewrite;auto;rewrite;auto;assumption
log_step_failure_star_simulation,systems/LogCorrect.v,13,intros;induction;apply;inversion;subst;apply;apply;apply;assumption;apply;apply;apply;assumption
step_ordered_failure_serialized_simulation_star,systems/SerializedMsgParamsCorrect.v,26,intros;generalize_dependent;generalize_dependent;induction;intros;subst;constructor;destruct;destruct;simpl;inversion;subst;apply;apply;apply;auto;apply;econstructor;eauto;unfold;rewrite;rewrite;rewrite;rewrite;apply;eauto
tot_map_net_label_event_inf_often_occurred_conv,core/TotalMapExecutionSimulations.v,11,intros;unfold;intros;specialize;destruct;exists;split;auto;unfold;simpl;assumption
inputs_m_inr,systems/PrimaryBackup.v,3,intros;simpl;reflexivity
Nth_app,systems/LiveLockServ.v,5,intros;induction;apply;apply;apply
pt_ext_init_handlers_fun_eq,core/PartialExtendedMapSimulations.v,6,apply;intros;unfold;destruct;reflexivity;reflexivity
nwnw_lock,systems/LiveLockServ.v,20,intros;unfold;intros;destruct;congruence;exists;split;assumption;intros;unfold;specialize;destruct;apply;assumption;unfold;intros;specialize;destruct;apply;assumption
locks_correct_net_handlers,systems/LiveLockServ.v,11,intros;unfold;intros;destruct;subst;rewrite;apply;eauto;rewrite;auto;apply
step_ordered_dynamic_failure_tot_one_mapped_simulation_star_1,core/SingleSimulations.v,38,intros;revert;induction;intros;subst;simpl;unfold;rewrite;destruct;discriminate;simpl;inversion;subst;exists;constructor;destruct;destruct;simpl;destruct;apply;subst;unfold;destruct;discriminate;simpl;inversion;subst;specialize;destruct;exists;constructor;auto;apply;specialize;destruct;exists;constructor;auto
decomposition_invariant,core/StatePacketPacketDecomposition.v,16,unfold;intros;destruct;unfold;destruct;unfold;split;admit;admit;unfold;destruct;unfold;destruct;split;admit;admit
map_id_tr,core/GhostSimulations.v,12,intros;induction;reflexivity;simpl;destruct;simpl;f_equal;apply;simpl;f_equal;rewrite;apply
step_ordered_failure_tot_one_mapped_simulation_1,core/SingleSimulations.v,0,
step_ordered_pt_mapped_simulation_1,core/PartialMapSimulations.v,20,intros;inversion;subst;simpl;right;split;reflexivity;destruct;right;split;auto;simpl;rewrite;reflexivity;left;constructor;auto;simpl;rewrite;reflexivity
step_ordered_failure_pt_mapped_simulation_1,core/PartialMapSimulations.v,4086,intros;inversion;subst;simpl;left;constructor;assumption;left;constructor;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption;assumption
lb_step_ordered_dynamic_failure_pt_mapped_simulation_1_non_silent,core/PartialMapExecutionSimulations.v,0,
inputs_with_key_plus_key,systems/VarD.v,9,intros;unfold;rewrite;rewrite;simpl;rewrite;rewrite;simpl;reflexivity
remove_neq_o,lib/FMapVeryWeak.v,20,intros;unfold;destruct;apply;destruct;apply;apply;rewrite;reflexivity;destruct;exfalso;apply;apply;rewrite;inversion;intro;apply;apply;assumption;reflexivity
ack_in_flight_to_primary_backup,systems/Counter.v,5,intros;unfold;simpl;rewrite;reflexivity
step_1_star_trace_state_correct,systems/VarD.v,5,intros;induction;apply;apply;eauto
LockServ_nwnw_net_handlers_old_new,systems/LiveLockServ.v,31,intros;unfold;intros;destruct;apply;subst;specialize;destruct;split;intros;apply;assumption;apply;right;apply;eassumption;intros;apply;assumption;apply;right;apply;eassumption;apply;split;intros;apply;assumption;intros;apply;assumption
not_in_map_not_in_failed,core/TotalMapSimulations.v,6,intros;unfold;intros;apply;apply;assumption
pt_ext_map_update_eq,core/PartialExtendedMapSimulations.v,9,intros;apply;intros;unfold;destruct;subst;rewrite;reflexivity;reflexivity
step_ordered_dynamic_star_lb_step_reachable,core/LabeledNet.v,23,unfold;intros;induction;exists;split;apply;intros;exists;reflexivity;destruct;exists;split;apply;assumption;intros;destruct;exists;simpl;reflexivity;destruct;exists;simpl;assumption
pt_map_odnet_tot_map_label_event_strong_fairness,core/PartialMapExecutionSimulations.v,11,intros;unfold;intros;apply;auto;intros;apply;simpl;assumption;apply;assumption
step_1_star_singleton_trace,systems/PrimaryBackup.v,20,intros;inversion;subst;inversion;subst;constructor;inversion;subst;inversion;inversion;inversion;subst;inversion;subst;inversion;inversion;inversion;subst;inversion;inversion
lb_step_ordered_failure_tot_mapped_simulation_1,core/TotalMapExecutionSimulations.v,53,intros;inversion;subst;constructor;simpl;destruct;constructor;split;rewrite;assumption;rewrite;assumption;assumption;simpl;constructor;rewrite;assumption;assumption;simpl;constructor;rewrite;assumption;assumption;simpl;constructor;rewrite;assumption;assumption;simpl;constructor;rewrite;assumption;assumption;simpl;constructor;rewrite;assumption;assumption;simpl;constructor;rewrite;assumption;assumption;simpl;constructor;rewrite;assumption;assumption;simpl;constructor;rewrite;assumption;assumption
step_failure_serialize_simulation_star,systems/SerializedMsgParamsCorrect.v,30,intros;generalize_dependent;induction;intros;subst;constructor;destruct;destruct;inversion;subst;apply;apply;auto;apply;auto;apply;apply;auto;apply;auto;apply;apply;auto;apply;auto;apply;apply;auto;apply;auto
reachable_intro,systems/LiveLockServ.v,4,intros;unfold;exists;assumption
refl_trans_n1_1n_trace,core/Net.v,6,intros;induction;apply;apply;eauto;apply
adjacent_to_irreflexive,core/NameOverlay.v,6,unfold;intros;unfold;destruct;apply;reflexivity
lb_step_execution_lb_step_ordered_dynamic_failure_tot_map_odnet_infseq,core/TotalMapExecutionSimulations.v,21,intros;unfold;destruct;split;unfold;rewrite;assumption;intros;specialize;unfold;destruct;split;unfold;rewrite;assumption;intros;specialize;unfold;rewrite;rewrite;assumption
In_n_Nodes,systems/LockServ.v,2,unfold;apply
last_holder'_locked_some_eq,systems/LockServ.v,20,intros;unfold;destruct;destruct;destruct;discriminate;simpl;apply;destruct;apply;destruct;inversion;simpl;destruct;inversion;reflexivity;apply;destruct;inversion;discriminate
locks_correct_unlock_true_to_false,systems/LockServ.v,13,intros;unfold;intros;destruct;subst;rewrite;simpl;rewrite;discriminate;rewrite;auto;apply;assumption
tot_map_in_snd,core/TotalMapSimulations.v,9,intros;apply;destruct;simpl;apply;destruct;inversion;subst;reflexivity
locks_correct_true_at_head_of_queue,systems/LiveLockServ.v,9,intros;unfold;specialize;unfold;destruct;simpl;rewrite;simpl;assumption
dup_drop_step_star_step_n1,core/DupDropReordering.v,6,intros;induction;apply;apply;apply;apply
locks_correct_invariant,systems/LiveLockServ.v,14,intros;induction;unfold;unfold;intros;simpl;destruct;simpl;auto;unfold;intros;apply;apply;eauto
locks_correct_unlock_at_head,systems/LiveLockServ.v,7,intros;unfold;destruct;unfold;rewrite;rewrite;assumption
network_eq,systems/SeqNumCorrect.v,6,intros;destruct;destruct;simpl;subst;reflexivity
locks_correct_locked_invariant,systems/LiveLockServ.v,47,intros;induction;simpl;unfold;simpl;contradiction;inversion;subst;simpl;destruct;apply;simpl;destruct;subst;simpl;apply;right;left;reflexivity;apply;right;right;assumption;apply;simpl;apply;left;assumption;destruct;apply;simpl;destruct;subst;simpl;apply;right;left;reflexivity;apply;right;right;assumption;apply;simpl;apply;left;assumption
post_net_analyze_sent_packet,core/StatePacketPacketDecomposition.v,13,intros;apply;destruct;apply;destruct;simpl;subst;left;split;assumption;reflexivity;right;assumption
ZOOOPST_cons_intro,systems/PrimaryBackup.v,6,intros;unfold;simpl;split;apply;apply
Nth_tl,systems/LiveLockServ.v,6,intros;destruct;inversion;simpl;inversion;assumption
NOABT_singleton_inl,systems/PrimaryBackup.v,8,intros;unfold;intros;simpl;destruct;inversion;subst;reflexivity
locks_correct_locked_at_head,systems/LockServ.v,7,intros;unfold;destruct;unfold;rewrite;rewrite;assumption
pt_map_odnet_tot_map_labeled_event_state_continuously_enabled,core/PartialMapExecutionSimulations.v,32,intros;unfold;intros;specialize;unfold;simpl;unfold;simpl;destruct;destruct;simpl;unfold;simpl;unfold;simpl;destruct;apply;exfalso;apply;unfold;apply;intros;specialize;unfold;simpl;unfold;simpl;unfold;simpl;destruct;reflexivity;discriminate
ZOOOPST_singleton_singleton,systems/PrimaryBackup.v,12,intros;unfold;intros;simpl;destruct;inversion;subst;simpl;left;reflexivity;simpl;contradiction
last_holder'_no_out_extend,systems/LiveLockServ.v,10,intros;unfold;destruct;inversion;subst;rewrite;rewrite;simpl;reflexivity;discriminate
pt_nodup_perm_map_map_pair_perm,core/PartialMapSimulations.v,31,intros;unfold;destruct;discriminate;inversion;subst;apply;apply;apply;apply;rewrite;simpl;rewrite;assumption;intros;apply;destruct;subst;apply;assumption;intros;split;intros;apply;apply;unfold;assumption;apply;apply;unfold;assumption
lb_step_ordered_dynamic_failure_pt_mapped_simulation_1_silent,core/PartialMapExecutionSimulations.v,4463,intros;inversion;subst;split;constructor;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity
in_failed_exclude,core/TotalMapSimulations.v,7,intros;split;intro;apply;contradiction;apply;assumption
disk_correct_invariant,systems/LogCorrect.v,26,intros;induction;intros;unfold;simpl;unfold;intros;reflexivity;destruct;destruct;simpl;inversion;subst;clear;unfold;intros;apply;unfold;intros;apply;unfold;intros;apply;unfold;intros;apply
collate_pt_map_update2_eq,core/PartialMapSimulations.v,82,intros;apply;intros;apply;intros;unfold;repeat;break_match;simpl;congruence;rewrite;rewrite;f_equal;rewrite;rewrite;f_equal;rewrite;rewrite;f_equal;apply;rewrite;rewrite;f_equal;apply;rewrite;rewrite;f_equal;apply;rewrite;rewrite;f_equal;rewrite;rewrite;f_equal;rewrite;rewrite;f_equal;apply;rewrite;rewrite;f_equal;apply;rewrite;rewrite;f_equal;apply;rewrite;rewrite;f_equal;rewrite;rewrite;f_equal;rewrite;rewrite;f_equal;apply;rewrite;rewrite;f_equal;apply;rewrite;rewrite;f_equal;apply;rewrite;rewrite;f_equal;rewrite;rewrite;f_equal;rewrite;rewrite;f_equal;apply;rewrite;rewrite;f_equal;apply;rewrite;rewrite;f_equal;apply
step_failure_pt_mapped_simulation_star_1,core/PartialMapSimulations.v,47,intros;generalize_dependent;generalize_dependent;induction;intros;subst;exists;split;constructor;simpl;reflexivity;destruct;destruct;destruct;destruct;subst;specialize;destruct;destruct;destruct;exists;split;apply;apply;left;exists;split;apply;assumption;assumption;assumption;simpl;rewrite;rewrite;rewrite;reflexivity;subst;specialize;destruct;exists;split;apply;apply;right;assumption;assumption;assumption
correspond_preserved_primary_apply_entry,systems/PrimaryBackup.v,24,intros;unfold;intros;destruct;split;destruct;subst;rewrite;rewrite;rewrite;rewrite;reflexivity;rewrite;reflexivity;destruct;subst;rewrite;rewrite;rewrite;rewrite;reflexivity;rewrite;rewrite;reflexivity
reghost_deghost_partial_inverses,core/GhostSimulations.v,13,intros;unfold;destruct;simpl;f_equal;apply;intros;destruct;reflexivity;apply;intros;destruct;reflexivity
LockServ_nwnw_input_handlers_old_new,systems/LiveLockServ.v,16,intros;unfold;specialize;unfold;intros;destruct;split;unfold;intros;apply;assumption;assumption;intros;apply;assumption;assumption
step_async_pt_ext_mapped_simulation_star_1,core/PartialExtendedMapSimulations.v,0,
filterMap_pt_map_trace_ev_outputs_eq,core/PartialMapSimulations.v,12,intros;unfold;induction;simpl;reflexivity;destruct;simpl;rewrite;simpl;f_equal;apply;apply
locked_in_flight_all_clients_false,systems/LockServ.v,11,intros;unfold;specialize;destruct;auto;exfalso;unfold;specialize;destruct;rewrite;congruence
locks_correct_invariant,systems/LockServ.v,50,intros;induction;unfold;simpl;intros;reflexivity;destruct;destruct;inversion;subst;simpl;clear;unfold;intros;destruct;subst;simpl;destruct;simpl;destruct;apply;assumption;simpl;apply;assumption;simpl;apply;assumption;simpl;apply;assumption;unfold;intros;destruct;subst;simpl;destruct;simpl;destruct;apply;assumption;simpl;apply;assumption;simpl;apply;assumption;simpl;apply;assumption
tot_map_odnet_hd_step_ordered_dynamic_failure_star_always,core/TotalMapExecutionSimulations.v,7,intros;apply;unfold;destruct;unfold;simpl;assumption
last_holder_some_unlock_inv,systems/LiveLockServ.v,15,intros;unfold;destruct;apply;destruct;rewrite;assumption;simpl;destruct;rewrite;assumption;simpl;destruct;congruence;congruence
in_map_pair_adjacent_to,core/TotalMapSimulations.v,6,intros;apply;destruct;subst;apply;assumption
NOABT_app,systems/PrimaryBackup.v,9,intros;unfold;intros;apply;destruct;apply;assumption;apply;assumption
revert_trace_app,systems/PrimaryBackup.v,7,intros;induction;simpl;reflexivity;simpl;rewrite;reflexivity
locks_correct_unlock_sent_locked,systems/LiveLockServ.v,9,intros;unfold;intros;destruct;discriminate;simpl;subst;simpl;auto
map_eq_name_eq_eq,core/TotalMapSimulations.v,9,intros;apply;assumption;intros;unfold;injection;intros;subst;reflexivity
last_holder'_input_inv,systems/LiveLockServ.v,43,intros;unfold;destruct;destruct;apply;destruct;rewrite;apply;destruct;apply;split;auto;destruct;auto;simpl;destruct;inversion;subst;contradiction;apply;destruct;apply;split;auto;destruct;auto;apply;apply;intros;specialize;apply;destruct;apply;destruct;auto;simpl;destruct;inversion;subst;contradiction;apply;destruct;auto
snoc_at_head_of_queue_preserved,systems/LiveLockServ.v,19,intros;unfold;simpl;unfold;destruct;contradiction;rewrite;destruct;simpl;subst;simpl;left;reflexivity;simpl;simpl;destruct;inversion;right;assumption
post_input_analyze_sent_packet,core/StatePacketPacketDecomposition.v,13,intros;apply;destruct;left;apply;destruct;simpl;inversion;subst;split;auto;right;assumption
NOABT_singleton_inr_read_response,systems/PrimaryBackup.v,7,intros;unfold;intros;simpl;destruct;inversion;contradiction
InputHandler_lbcases,systems/LiveLockServ.v,41,intros;unfold;destruct;destruct;simpl;inversion;subst;clear;left;exists;split;auto;left;auto;destruct;simpl;inversion;subst;clear;left;exists;split;auto;right;repeat;split;auto;left;exists;split;auto;right;repeat;split;auto;right;destruct;simpl;inversion;subst;auto
processPackets_ge_start,systems/SeqNumCorrect.v,21,intros;generalize_dependent;generalize_dependent;induction;intros;simpl;inversion;subst;inversion;simpl;destruct;destruct;inversion;subst;simpl;destruct;subst;apply;assumption;apply;assumption
locked_in_flight_all_clients_false,systems/LiveLockServ.v,14,intros;unfold;specialize;destruct;auto;exfalso;unfold;specialize;rewrite;destruct;congruence;destruct;specialize;congruence
processInputs_cons_defn,systems/PrimaryBackup.v,5,intros;simpl;destruct;destruct;reflexivity
locks_correct_true_at_head_of_queue,systems/LockServ.v,19,intros;unfold;specialize;destruct;simpl;rewrite;simpl;destruct;simpl;congruence;simpl;destruct;apply;apply;subst;simpl;reflexivity;simpl;congruence
filterMap_pt_map_name_msg_empty_eq,core/PartialMapSimulations.v,9,intros;induction;simpl;reflexivity;simpl;destruct;discriminate;apply;assumption
all_Names_Nodes,systems/Counter.v,8,intros;unfold;apply;apply;exists;split;apply;apply
outputs_1_on_nil,systems/PrimaryBackup.v,1,reflexivity
ServerNetHandler_cases,systems/LockServ.v,39,intros;unfold;break_match;find_inversion;simpl;repeat;find_rewrite;repeat;split;eauto;right;left;repeat;split;eauto;destruct;left;simpl;eauto;right;simpl;eauto;left;exists;repeat;split;eauto;destruct;left;simpl;eauto;right;simpl;eauto;right;right;repeat;split;eauto
processInputs_app,systems/PrimaryBackup.v,12,intros;generalize_dependent;induction;intros;simpl;reflexivity;simpl;destruct;destruct;simpl;rewrite;reflexivity
trace_mutex'_unlock_extend,systems/LiveLockServ.v,30,intros;unfold;intros;apply;apply;destruct;destruct;apply;eauto;destruct;contradiction;inversion;subst;apply;eauto;destruct;contradiction;inversion;subst;apply;eauto;destruct;contradiction;destruct;contradiction;inversion;inversion;subst;apply;eauto
ack_in_flight_to_primary_app,systems/Counter.v,5,intros;unfold;rewrite;rewrite;reflexivity
outputs_m_app,systems/PrimaryBackup.v,4,intros;unfold;rewrite;reflexivity
inputs_m_inl_read_singleton,systems/PrimaryBackup.v,3,intros;simpl;reflexivity
trace_relations_work,core/TraceRelations.v,6,intros;induction;apply;apply;apply;eauto
locks_correct_locked_input_handlers_new,systems/LiveLockServ.v,15,intros;unfold;intros;destruct;subst;rewrite;contradiction;rewrite;assumption;destruct;destruct;simpl;auto;simpl;auto
pt_map_msg_update2,core/PartialMapSimulations.v,0,
inputs_1_m_revert,systems/PrimaryBackup.v,21,intros;induction;simpl;subst;simpl;reflexivity;subst;simpl;destruct;simpl;rewrite;simpl;rewrite;simpl;reflexivity;simpl;rewrite;simpl;rewrite;simpl;reflexivity
tot_map_onet_hd_step_ordered_failure_star_always,core/TotalMapExecutionSimulations.v,7,intros;apply;unfold;destruct;unfold;simpl;assumption
reboot_invariant,systems/LogCorrect.v,28,intros;induction;simpl;unfold;simpl;inversion;reflexivity;destruct;destruct;simpl;destruct;apply;auto;destruct;unfold;simpl;destruct;subst;rewrite;inversion;subst;unfold;simpl;destruct;simpl;reflexivity;apply;auto
MsgLock_eventually_MsgLocked,systems/LiveLockServ.v,19,intros;unfold;apply;destruct;exists;apply;unfold;unfold;unfold;destruct;specialize;destruct;unfold;specialize;unfold;unfold;unfold;unfold;assumption
InputHandler_cases,systems/LockServ.v,41,intros;unfold;destruct;destruct;simpl;inversion;subst;left;exists;split;auto;left;auto;destruct;simpl;inversion;subst;left;exists;split;auto;right;split;auto;left;auto;inversion;subst;left;exists;split;auto;right;split;auto;right;auto;inversion;subst;right;auto
step_async_deserialized_simulation,systems/SerializedMsgParamsCorrect.v,31,intros;inversion;subst;simpl;left;constructor;unfold;simpl;rewrite;apply;intros;unfold;destruct;auto;unfold;simpl;rewrite;apply;intros;unfold;destruct;auto;right;unfold;simpl;rewrite;apply;intros;unfold;destruct;auto
ZOOOPST_cons_elim,systems/PrimaryBackup.v,5,intros;inversion;subst;split;assumption
nwnw_unlock_lock,systems/LockServ.v,19,intros;unfold;specialize;destruct;congruence;destruct;congruence;reflexivity;exfalso;apply;auto;destruct;congruence;exfalso;apply;auto;exfalso;apply;auto
pt_msg_in_map,core/PartialMapSimulations.v,16,intros;unfold;apply;destruct;simpl;destruct;simpl;inversion;subst;apply;subst;simpl;inversion;reflexivity;simpl;discriminate
InputUnlock_held,systems/LiveLockServ.v,0,
tot_map_net_label_event_inf_often_occurred,core/TotalMapExecutionSimulations.v,9,intros;apply;apply;assumption;intros;unfold;destruct;simpl;reflexivity
network_invariant_inductive,systems/PrimaryBackup.v,49,intros;unfold;intros;destruct;unfold;destruct;destruct;destruct;destruct;simpl;unfold;destruct;subst;rewrite;rewrite;apply;assumption;apply;assumption;unfold;destruct;destruct;destruct;destruct;simpl;unfold;destruct;subst;rewrite;rewrite;apply;assumption;apply;assumption;unfold;destruct;destruct;destruct;destruct;simpl;unfold;destruct;subst;rewrite;rewrite;apply;assumption;apply;assumption
in_exclude_not_in_failed_map,core/TotalMapSimulations.v,9,intros;split;intro;apply;destruct;apply;contradiction;apply;assumption
last_holder'_server_extend,systems/LockServ.v,6,intros;unfold;rewrite;simpl;destruct;reflexivity
tot_map_update_eq,core/TotalMapSimulations.v,9,intros;apply;intros;unfold;destruct;subst;rewrite;reflexivity;reflexivity
step_async_star_lb_step_reachable,core/LabeledNet.v,14,unfold;intros;induction;exists;split;apply;constructor;destruct;exists;split;apply;assumption;econstructor;eauto
cross_relation,systems/LockServ.v,6,intros;intros;induction;apply;apply;auto
weak_fairness_invar,core/LabeledNet.v,7,intros;unfold;intros;apply;simpl;apply;assumption
InputHandler_Client_Unlock,systems/LiveLockServ.v,7,intros;unfold;simpl;eexists;eexists;eexists;reflexivity
last_holder'_neq_unlock_extend,systems/LockServ.v,24,intros;induction;simpl;discriminate;simpl;destruct;destruct;simpl;apply;assumption;destruct;destruct;subst;simpl;rewrite;reflexivity;simpl;rewrite;apply;assumption;apply;assumption;apply;assumption
pt_map_odnet_hd_step_ordered_dynamic_failure_star,core/PartialMapExecutionSimulations.v,10,intros;induction;apply;apply;apply;unfold;destruct;simpl;apply;assumption
tot_map_name_injective,core/TotalMapSimulations.v,4,intros;unfold;injection;assumption
inputs_m_inr_singleton,systems/PrimaryBackup.v,3,intros;simpl;reflexivity
step_ordered_dynamic_failure_pt_ext_mapped_simulation_star_1,core/PartialExtendedMapSimulations.v,40,intros;generalize_dependent;generalize_dependent;induction;intros;subst;exists;constructor;destruct;destruct;specialize;destruct;destruct;assert;destruct;left;destruct;exists;split;apply;assumption;unfold;simpl;unfold;simpl;apply;eauto;right;destruct;split;unfold;simpl;unfold;simpl;apply;eauto;assumption;exists;constructor;eauto
revert_state_defn,systems/PrimaryBackup.v,3,intros;unfold;reflexivity
revertNetwork_deliver_step,systems/SeqNumCorrect.v,26,intros;unfold;simpl;destruct;simpl;rewrite;simpl;exists;split;reflexivity;unfold;simpl;rewrite;simpl;f_equal;apply;intros;destruct;subst;rewrite;simpl;rewrite;reflexivity;rewrite;auto;reflexivity
decomposition_reachable_nw_invariant,systems/LiveLockServ.v,23,intros;induction;simpl;contradiction;destruct;destruct;simpl;apply;destruct;apply;assumption;subst;apply;assumption;destruct;simpl;apply;destruct;apply;assumption;subst;apply;assumption
collate_ls_tot_map_update2_eq,core/TotalMapSimulations.v,36,intros;apply;intros;apply;intros;unfold;destruct;subst;destruct;subst;destruct;subst;rewrite;reflexivity;rewrite;reflexivity;destruct;subst;rewrite;reflexivity;rewrite;reflexivity;destruct;subst;destruct;subst;rewrite;reflexivity;rewrite;reflexivity;destruct;subst;rewrite;reflexivity;rewrite;reflexivity
in_msg_filterMap_pt_map_msg,core/PartialMapSimulations.v,22,intros;induction;inversion;simpl;destruct;simpl;destruct;subst;rewrite;inversion;subst;left;reflexivity;right;apply;assumption;destruct;subst;rewrite;discriminate;apply;assumption
inputs_m_backup_singleton,systems/PrimaryBackup.v,3,intros;simpl;reflexivity
PB_net_out_case,systems/PrimaryBackup.v,56,intros;unfold;destruct;subst;destruct;destruct;destruct;inversion;subst;right;right;exists;split;auto;split;auto;simpl;rewrite;auto;inversion;subst;left;split;auto;split;auto;simpl;rewrite;auto;destruct;subst;destruct;destruct;destruct;inversion;subst;right;right;exists;split;auto;split;auto;simpl;rewrite;auto;inversion;subst;right;left;split;auto;simpl;rewrite;auto;inversion
Locked_in_network_eventually_MsgLocked,systems/LiveLockServ.v,24,intros;unfold;destruct;simpl;inversion;exists;simpl;unfold;simpl;destruct;simpl;destruct;simpl;inversion;destruct;subst;simpl;left;reflexivity;simpl;exfalso;apply;inversion;reflexivity
dup_drop_Permutation,core/DupDropReordering.v,11,intros;induction;apply;apply;auto;apply;apply;apply;auto;apply;eauto
inputs_1_nil_outputs_1_nil,systems/PrimaryBackup.v,13,intros;unfold;unfold;induction;reflexivity;simpl;destruct;destruct;simpl;simpl;inversion;apply;assumption
processPackets_seq_eq,systems/SeqNumCorrect.v,42,intros;generalize_dependent;generalize_dependent;induction;intros;simpl;inversion;subst;contradiction;simpl;destruct;destruct;inversion;subst;simpl;destruct;subst;reflexivity;subst;apply;destruct;rewrite;apply;auto;rewrite;apply;right;left;reflexivity;subst;apply;destruct;rewrite;apply;auto;rewrite;apply;right;left;reflexivity;apply;auto
step_ordered_pt_ext_mapped_simulation_1,core/PartialExtendedMapSimulations.v,51,intros;inversion;subst;right;reflexivity;left;exists;constructor;auto;unfold;simpl;apply;intros;destruct;apply;destruct;rewrite;apply;exists;split;auto;apply;auto;apply;rewrite;apply;intros;apply;apply;auto;unfold;simpl;apply;intros;destruct;apply;destruct;rewrite;apply;exists;split;auto;apply;auto;apply;rewrite;apply;intros;apply;apply;auto
pt_map_update_eq,core/PartialMapSimulations.v,8,intros;apply;intros;unfold;destruct;rewrite;reflexivity;reflexivity
step_failure_deserialized_simulation_star,systems/SerializedMsgParamsCorrect.v,22,intros;generalize_dependent;induction;intros;subst;exists;split;constructor;reflexivity;destruct;specialize;destruct;destruct;exists;split;econstructor;apply;apply;rewrite;rewrite;rewrite;reflexivity
clients_move_way_up_in_queue,systems/LiveLockServ.v,11,intros;apply;apply;auto;intros;split;apply;eauto;intros;apply;lia
tot_init_handlers_fun_eq,core/TotalMapSimulations.v,5,apply;intros;unfold;destruct;reflexivity
MsgLock_Locked,systems/LiveLockServ.v,43,intros;unfold;assert;unfold;rewrite;assumption;clear;induction;simpl;subst;simpl;contradiction;destruct;destruct;destruct;simpl;subst;destruct;subst;exists;simpl;rewrite;simpl;left;reflexivity;apply;simpl;rewrite;simpl;assumption;destruct;simpl;subst;apply;simpl;rewrite;simpl;assumption;apply;simpl;rewrite;simpl;assumption
step_ordered_failure_serialize_simulation,systems/SerializedMsgParamsCorrect.v,104,intros;inversion;subst;simpl;apply;assumption;unfold;simpl;rewrite;simpl;rewrite;simpl;rewrite;simpl;rewrite;simpl;apply;intros;destruct;simpl;reflexivity;unfold;simpl;rewrite;simpl;rewrite;simpl;rewrite;simpl;rewrite;simpl;apply;intros;destruct;simpl;reflexivity;apply;assumption;unfold;simpl;rewrite;simpl;rewrite;simpl;rewrite;simpl;rewrite;simpl;apply;intros;destruct;simpl;reflexivity;apply;assumption;unfold;simpl;rewrite;simpl;rewrite;simpl;rewrite;simpl;rewrite;simpl;apply;intros;destruct;simpl;reflexivity;apply;assumption;unfold;simpl;rewrite;simpl;rewrite;simpl;rewrite;simpl;rewrite;simpl;apply;intros;destruct;simpl;reflexivity;apply;assumption;unfold;simpl;rewrite;simpl;rewrite;simpl;rewrite;simpl;rewrite;simpl;apply;intros;destruct;simpl;reflexivity
packet_eta,core/Net.v,4,intros;destruct;simpl;reflexivity
processPackets_num_monotonic,systems/SeqNumCorrect.v,25,intros;generalize_dependent;generalize_dependent;induction;intros;simpl;inversion;subst;omega;simpl;destruct;destruct;inversion;subst;specialize;assert;unfold;destruct;simpl;destruct;apply;omega;apply;omega;omega
locks_correct_locked_net_handlers_new,systems/LockServ.v,20,intros;unfold;intros;destruct;subst;rewrite;inversion;subst;apply;eauto;apply;rewrite;apply;right;left;reflexivity;rewrite;assumption;apply;eauto
trace_mutex'_unlock_extend,systems/LockServ.v,31,intros;unfold;intros;apply;destruct;apply;assumption;simpl;destruct;contradiction;inversion;subst;simpl;destruct;apply;subst;simpl;intros;destruct;contradiction;inversion;subst;contradiction;apply;simpl;intros;destruct;contradiction;inversion;subst;contradiction
in_pt_map_map_pair,core/PartialMapSimulations.v,20,intros;apply;exists;split;simpl;rewrite;reflexivity;apply;split;apply;apply;simpl;destruct;simpl;rewrite;inversion;reflexivity;simpl;rewrite;discriminate
step_async_pt_mapped_simulation_1,core/PartialMapSimulations.v,25,intros;inversion;subst;simpl;left;constructor;assumption;left;constructor;assumption;left;constructor;assumption;left;constructor;assumption;destruct;left;constructor;apply;eauto;right;split;auto;apply
last_holder'_no_out_inv,systems/LiveLockServ.v,13,intros;unfold;destruct;inversion;subst;apply;destruct;rewrite;reflexivity;destruct;reflexivity;discriminate;discriminate
RTn1_step,core/Net.v,9,intros;induction;apply;apply;assumption;apply;apply;assumption;apply
at_head_of_nil,systems/LockServ.v,5,intros;unfold;rewrite;simpl;assumption
lb_step_failure_tot_mapped_simulation_1,core/TotalMapExecutionSimulations.v,0,
last_holder'_input_extend,systems/LockServ.v,25,intros;unfold;destruct;rewrite;rewrite;simpl;destruct;exfalso;destruct;simpl;congruence;apply;reflexivity;assumption;rewrite;rewrite;simpl;destruct;exfalso;destruct;simpl;congruence;apply;reflexivity;assumption
Locked_delivered_MsgLocked,systems/LiveLockServ.v,4,intros;unfold;simpl;reflexivity
LockServ_mutual_exclusion_trace,systems/LiveLockServ.v,53,intros;split;induction;simpl;unfold;intros;inversion;simpl;unfold;intros;destruct;auto;destruct;auto;exfalso;apply;apply;auto;split;intros;induction;simpl;discriminate;simpl;destruct;apply;assumption;destruct;simpl;discriminate;destruct;subst;simpl;reflexivity;simpl;contradiction;intros;induction;simpl;discriminate;simpl;destruct;apply;assumption;destruct;simpl;discriminate;destruct;subst;simpl;reflexivity;simpl;contradiction
Nth_snoc,systems/LiveLockServ.v,8,intros;unfold;rewrite;rewrite;reflexivity;rewrite;simpl;lia
locks_correct_unlock_at_head,systems/LockServ.v,7,intros;unfold;destruct;unfold;rewrite;rewrite;assumption
step_failure_tot_mapped_simulation_2,core/TotalMapSimulations.v,46,intros;inversion;subst;destruct;destruct;exists;split;apply;auto;rewrite;apply;assumption;rewrite;apply;assumption;rewrite;apply;assumption;rewrite;apply;assumption;simpl;rewrite;reflexivity;destruct;exists;split;apply;auto;rewrite;apply;assumption;simpl;rewrite;reflexivity;destruct;exists;split;apply;auto;rewrite;apply;assumption;simpl;rewrite;reflexivity
inputs_m_inl_read,systems/PrimaryBackup.v,3,intros;simpl;reflexivity
tot_map_onet_label_event_inf_often_occurred_conv,core/TotalMapExecutionSimulations.v,13,intros;unfold;intros;specialize;destruct;exists;split;assumption;unfold;unfold;unfold;unfold;assumption
step_async_outputs_m,systems/PrimaryBackup.v,20,intros;inversion;subst;simpl;right;right;exists;reflexivity;right;left;split;reflexivity;exists;reflexivity;left;split;reflexivity;split;reflexivity;assumption
MsgLocked_held,systems/LiveLockServ.v,38,intros;unfold;destruct;unfold;destruct;simpl;contradiction;simpl;unfold;exists;simpl;unfold;unfold;unfold;simpl;unfold;destruct;inversion;subst;simpl;contradiction;destruct;inversion;subst;simpl;destruct;contradiction;inversion;subst;simpl;reflexivity;simpl;destruct;contradiction;inversion;subst;simpl;reflexivity
pt_init_handlers_fun_eq,core/PartialMapSimulations.v,5,apply;intros;unfold;rewrite;reflexivity
NetHandler_trace_preserved,systems/Counter.v,9,intros;unfold;simpl;destruct;inversion;subst;simpl;rewrite;reflexivity
lb_step_execution_extensional,core/LabeledNet.v,11,unfold;intros;apply;unfold;apply;intro;specialize;destruct;destruct;simpl;congruence
nw_empty_queue_lock,systems/LockServ.v,21,intros;unfold;specialize;destruct;auto;exfalso;apply;simpl;rewrite;discriminate;simpl;rewrite;discriminate;exfalso;apply;simpl;rewrite;discriminate;simpl;rewrite;discriminate
collate_ls_tot_map_eq,core/TotalMapSimulations.v,18,intros;apply;intros;apply;intros;unfold;rewrite;apply;intros;destruct;destruct;destruct;destruct;rewrite;rewrite;rewrite;congruence;auto
ghost_invariant_lift,core/GhostSimulations.v,4,intros;apply;assumption;assumption
msg_eq_dec,systems/PrimaryBackup.v,1,decide_equality
pt_map_onet_tot_map_label_event_strong_fairness,core/PartialMapExecutionSimulations.v,16,intros;unfold;intros;apply;intros;apply;assumption;apply;destruct;exists;split;assumption;intros;specialize;unfold;assumption
locks_correct_unlock_net_handlers_new,systems/LockServ.v,14,intros;unfold;intros;destruct;subst;unfold;specialize;rewrite;assumption;unfold;specialize;rewrite;assumption;assumption
pt_map_onet_tot_map_label_event_inf_often_occurred_conv,core/PartialMapExecutionSimulations.v,13,intros;unfold;intros;specialize;destruct;exists;split;auto;unfold;unfold;unfold;simpl;assumption
Lock_in_network_eventually_MsgLock,systems/LiveLockServ.v,0,
apply_log_app,systems/LogCorrect.v,7,intros;induction;simpl;reflexivity;simpl;rewrite;reflexivity
log_step_failure_step,systems/LogCorrect.v,33,intros;inversion;subst;apply;assumption;unfold;simpl;rewrite;reflexivity;apply;assumption;unfold;simpl;rewrite;reflexivity;apply;assumption;unfold;simpl;rewrite;reflexivity;apply;assumption;unfold;simpl;rewrite;reflexivity;apply;assumption;unfold;simpl;rewrite;reflexivity
all_nodes_all,systems/PrimaryBackup.v,3,intros;unfold;apply
locks_correct_locked_net_handlers_new,systems/LiveLockServ.v,67,intros;unfold;intros;destruct;subst;unfold;specialize;destruct;simpl;rewrite;destruct;simpl;contradiction;destruct;contradiction;apply;subst;rewrite;simpl;destruct;contradiction;apply;subst;assumption;destruct;contradiction;apply;subst;rewrite;simpl;destruct;contradiction;apply;subst;assumption;simpl;rewrite;destruct;simpl;contradiction;destruct;contradiction;apply;subst;rewrite;simpl;destruct;contradiction;apply;subst;assumption;destruct;contradiction;apply;subst;rewrite;simpl;destruct;contradiction;apply;subst;assumption;unfold;specialize;rewrite;assumption;assumption
inputs_with_key_plus_not_key,systems/VarD.v,13,intros;induction;simpl;destruct;congruence;simpl;destruct;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity
correspond_preserved_snoc,systems/PrimaryBackup.v,10,intros;unfold;destruct;split;rewrite;assumption;rewrite;rewrite;simpl;reflexivity
log_net_handlers_spec,systems/LogCorrect.v,15,intros;unfold;break_match;discriminate;find_inversion;unfold;intros;specialize;destruct;simpl;rewrite;assumption;simpl;rewrite;assumption
last_holder'_locked_extend,systems/LockServ.v,29,intros;unfold;induction;simpl;rewrite;simpl;reflexivity;simpl;destruct;rewrite;simpl;destruct;reflexivity;exfalso;apply;apply;right;left;reflexivity;rewrite;simpl;destruct;reflexivity;exfalso;apply;apply;right;left;reflexivity
empty_queue_all_clients_false,systems/LockServ.v,13,intros;unfold;specialize;destruct;auto;exfalso;apply;exists;split;auto;rewrite;simpl;discriminate
inputs_1_invert_app,systems/PrimaryBackup.v,30,intros;generalize_dependent;induction;intros;simpl;destruct;inversion;simpl;destruct;simpl;inversion;subst;exists;simpl;auto;destruct;simpl;inversion;subst;exists;simpl;auto;simpl;inversion;subst;apply;destruct;exists;simpl;auto
pt_map_net_deserialize_net,systems/SerializedMsgParamsCorrect.v,5,intros;unfold;apply;intros;reflexivity
last_holder'_locked_extend,systems/LiveLockServ.v,5,intros;unfold;rewrite;simpl;reflexivity
map_map_pair_eq,core/TotalMapSimulations.v,48,intros;unfold;rewrite;apply;apply;intros;unfold;destruct;auto;intros;rewrite;rewrite;split;intros;split;apply;destruct;subst;apply;exists;split;auto;intro;apply;apply;destruct;subst;apply;exists;split;auto;split;apply;destruct;subst;apply;exists;split;auto;intro;apply;apply;destruct;subst;apply;exists;split;auto
nwnw_sym,systems/LockServ.v,6,intros;unfold;intros;specialize;apply;assumption
processPackets_correct,systems/SeqNumCorrect.v,40,intros;unfold;inversion;subst;clear;generalize_dependent;generalize_dependent;induction;intros;simpl;inversion;subst;contradiction;simpl;destruct;destruct;simpl;destruct;inversion;subst;apply;destruct;apply;auto;rewrite;reflexivity;simpl;destruct;contradiction;inversion;subst;apply;lia;destruct;inversion;subst;apply;auto;rewrite;reflexivity
outputs_m_inl_singleton,systems/PrimaryBackup.v,3,intros;simpl;reflexivity
NoDup_Nodes,systems/Counter.v,6,unfold;apply;discriminate;apply;discriminate;apply
inputs_m_on_nil',systems/PrimaryBackup.v,1,reflexivity
outputs_m_revert_trace,systems/PrimaryBackup.v,16,intros;unfold;induction;reflexivity;simpl;destruct;destruct;simpl;simpl;rewrite;reflexivity;exfalso;apply;simpl;exists;reflexivity
list_destruct_last,systems/PrimaryBackup.v,14,intros;induction;left;reflexivity;destruct;right;exists;simpl;reflexivity;right;exists;simpl;rewrite;reflexivity
dup_drop_step_star_trans,core/DupDropReordering.v,3,intros;apply;eauto
inputs_m_primary_inl_request_singleton,systems/PrimaryBackup.v,3,intros;simpl;reflexivity
dup_drop_cons,core/DupDropReordering.v,10,intros;induction;apply;apply;apply;constructor;assumption;apply;constructor;assumption
InputHandler_trace_preserved,systems/Counter.v,5,intros;simpl;rewrite;simpl;reflexivity
lb_step_execution_lb_step_ordered_failure_pt_map_onet_infseq,core/PartialMapExecutionSimulations.v,27,intros;unfold;destruct;split;unfold;destruct;split;intros;specialize;unfold;destruct;simpl;assumption;intros;specialize;unfold;destruct;simpl;assumption;unfold;intros;specialize;unfold;destruct;destruct;simpl;assumption
inputs_m_on_cons,systems/PrimaryBackup.v,7,intros;simpl;destruct;destruct;destruct;simpl;reflexivity
trace_mutex'_locked_extend,systems/LockServ.v,27,intros;unfold;intros;apply;destruct;apply;auto;simpl;destruct;contradiction;inversion;subst;unfold;destruct;destruct;destruct;exfalso;apply;exists;rewrite;auto;exfalso;apply;exists;rewrite;auto;discriminate
locks_correct_unlock_sent_lock,systems/LiveLockServ.v,14,intros;unfold;intros;destruct;exfalso;apply;rewrite;reflexivity;destruct;apply;subst;rewrite;discriminate;reflexivity
lb_step_execution_invar,core/LabeledNet.v,4,intros;inversion;subst;assumption
outputs_m_inr_nil_singleton,systems/PrimaryBackup.v,3,intros;simpl;reflexivity
reachable_revert,systems/SeqNumCorrect.v,12,apply;intros;unfold;apply;intros;unfold;destruct;unfold;apply;assumption;apply;assumption
step_failure_star_lb_step_reachable,core/LabeledNet.v,20,unfold;intros;induction;exists;split;constructor;simpl;reflexivity;destruct;destruct;simpl;destruct;exists;split;econstructor;eassumption;eassumption;simpl;rewrite;congruence
map_msg_update2,core/TotalMapSimulations.v,17,intros;apply;intros;apply;intros;unfold;destruct;destruct;destruct;destruct;subst;simpl;congruence;rewrite;reflexivity;rewrite;congruence
collate_tot_map_update2_eq,core/TotalMapSimulations.v,47,intros;apply;intros;apply;intros;unfold;destruct;subst;rewrite;destruct;subst;rewrite;rewrite;rewrite;reflexivity;apply;apply;rewrite;rewrite;reflexivity;intro;apply;apply;assumption;intro;apply;apply;assumption;destruct;subst;rewrite;rewrite;rewrite;reflexivity;apply;apply;rewrite;rewrite;reflexivity;intro;apply;apply;assumption;intro;apply;apply;assumption
outputs_1_app,systems/PrimaryBackup.v,4,intros;unfold;rewrite;reflexivity
NOABT_singleton_primary,systems/PrimaryBackup.v,8,intros;unfold;intros;simpl;destruct;destruct;simpl;congruence
step_ordered_failure_pt_ext_mapped_simulation_1,core/PartialExtendedMapSimulations.v,40,intros;inversion;subst;simpl;left;exists;constructor;left;exists;constructor;auto;simpl;rewrite;simpl;reflexivity;left;exists;constructor;auto;simpl;rewrite;simpl;reflexivity;left;exists;constructor;auto;simpl;rewrite;simpl;reflexivity;destruct;apply;right;split;auto;left;exists;constructor;auto
trace_mutual_exclusion'_extend_input_server,systems/LockServ.v,8,intros;unfold;intros;apply;apply;left;assumption;assumption
in_in_adj_map_pair,core/TotalMapSimulations.v,11,intros;apply;exists;split;auto;apply;auto;split;auto;apply;auto
LockServ_nwnw_net_handlers_new_new,systems/LiveLockServ.v,29,intros;unfold;unfold;intros;specialize;destruct;split;intros;apply;destruct;inversion;subst;clear;apply;apply;exists;split;auto;intros;apply;destruct;inversion;subst;clear;apply;apply;exists;split;auto
count_occ_filterMap_pt_map_msg_eq,core/PartialMapSimulations.v,29,intros;induction;simpl;reflexivity;simpl;destruct;simpl;destruct;destruct;subst;rewrite;inversion;subst;f_equal;apply;rewrite;inversion;subst;exfalso;apply;reflexivity;exfalso;apply;reflexivity;destruct;subst;rewrite;discriminate;apply
trace_mutex'_no_out_extend,systems/LiveLockServ.v,15,intros;unfold;intros;apply;apply;destruct;destruct;apply;eauto;exfalso;inversion;exfalso;inversion;exfalso;inversion
reachable_sane,systems/SeqNumCorrect.v,104,apply;unfold;intros;unfold;destruct;induction;simpl;unfold;destruct;unfold;apply;simpl;destruct;apply;unfold;destruct;destruct;unfold;intros;specialize;destruct;subst;destruct;subst;destruct;subst;right;exists;split;auto;apply;left;apply;left;intros;destruct;apply;destruct;inversion;subst;apply;auto;apply;exists;split;auto;apply;exists;split;auto;apply;left;apply;apply;exists;split;auto;apply;left;apply;destruct;unfold;intros;specialize;destruct;subst;destruct;subst;destruct;subst;right;exists;split;auto;apply;right;apply;left;intros;destruct;apply;destruct;apply;exists;split;auto;inversion;subst;apply;auto;apply;exists;split;auto;apply;right;apply;apply;exists;split;auto;apply;right;apply
last_holder_unlock_none,systems/LockServ.v,27,intros;unfold;destruct;destruct;destruct;discriminate;simpl;inversion;subst;simpl;rewrite;simpl;rewrite;simpl;destruct;destruct;destruct;discriminate;simpl;rewrite;simpl;reflexivity;rewrite;simpl;reflexivity;simpl;discriminate
inputs_1_singleton,systems/PrimaryBackup.v,14,intros;unfold;destruct;simpl;discriminate;simpl;destruct;simpl;inversion;subst;exists;reflexivity;simpl;discriminate
locks_correct_locked_sent_lock,systems/LockServ.v,22,intros;unfold;intros;rewrite;simpl;destruct;destruct;simpl;destruct;subst;rewrite;simpl;congruence;rewrite;simpl;congruence;rewrite;simpl;congruence;rewrite;simpl;congruence
inputs_1_app,systems/PrimaryBackup.v,4,intros;unfold;rewrite;reflexivity
adjacent_in_in_msg,core/TotalMapSimulations.v,11,intros;unfold;apply;exists;split;reflexivity;apply;split;assumption;apply;assumption
empty_o,lib/FMapVeryWeak.v,3,intros;unfold;reflexivity
locks_correct_locked_at_head_preserved,systems/LockServ.v,6,intros;unfold;intros;apply;apply;assumption
locks_correct_unlock_at_head_preserved,systems/LockServ.v,6,intros;unfold;intros;apply;apply;assumption
PB_net_defn',systems/PrimaryBackup.v,49,intros;unfold;destruct;destruct;destruct;injection;left;repeat;split;auto;exists;auto;destruct;injection;right;left;repeat;split;auto;destruct;injection;right;right;exists;repeat;split;auto;destruct;left;auto;right;exists;auto;rewrite;auto;destruct;injection;right;right;repeat;split;auto;exists;auto;injection;left;repeat;split;auto
inputs_m_app_inr_singleton,systems/PrimaryBackup.v,6,intros;unfold;rewrite;simpl;rewrite;reflexivity
strong_fairness_invar,core/LabeledNet.v,3,move;move;apply
Locked_enables_MsgLocked,systems/LiveLockServ.v,13,intros;unfold;intros;simpl;destruct;contradiction;destruct;contradiction;destruct;contradiction;inversion;subst;reflexivity
inputs_m_app,systems/PrimaryBackup.v,4,intros;unfold;rewrite;reflexivity
mutual_exclusion_invariant,systems/LiveLockServ.v,30,intros;unfold;intros;unfold;destruct;induction;unfold;simpl;unfold;simpl;intros;contradiction;destruct;unfold;destruct;destruct;destruct;unfold;simpl;specialize;intros;apply;assumption;destruct;unfold;simpl;specialize;intros;apply;assumption
network_invariant_init,systems/PrimaryBackup.v,22,unfold;intros;unfold;destruct;subst;unfold;intros;simpl;split;intros;inversion;intros;inversion;subst;unfold;intros;simpl;split;intros;inversion;intros;inversion
NOABT_tail,systems/PrimaryBackup.v,7,intros;unfold;intros;apply;simpl;right;assumption
mgv_ghost_invariant_lower,core/GhostSimulations.v,4,intros;apply;assumption;assumption
pt_map_odnet_tot_map_label_event_inf_often_occurred,core/PartialMapExecutionSimulations.v,3,intros;apply;assumption
revertNetwork_packets,systems/SeqNumCorrect.v,6,intros;exists;unfold;simpl;rewrite;reflexivity
ClientNetHandler_lbcases,systems/LiveLockServ.v,15,intros;unfold;destruct;simpl;inversion;subst;clear;split;auto;left;auto;split;auto;right;auto
last_holder'_no_out_inv,systems/LockServ.v,13,intros;unfold;destruct;inversion;subst;apply;destruct;rewrite;reflexivity;simpl;destruct;inversion;inversion
step_ordered_dynamic_failure_tot_mapped_simulation_star_1,core/TotalMapSimulations.v,2445,intros;generalize_dependent;generalize_dependent;induction;intros;subst;constructor;destruct;destruct;simpl;inversion;subst;specialize;apply;apply;clear;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right;destruct;left;simpl;rewrite;apply;assumption;right
inc_in_flight_to_backup_app,systems/Counter.v,5,intros;unfold;rewrite;rewrite;reflexivity
head_grant_state_unlock,systems/LiveLockServ.v,47,intros;induction;subst;simpl;inversion;destruct;subst;simpl;destruct;inversion;destruct;inversion;subst;destruct;subst;right;left;apply;destruct;inversion;subst;simpl;destruct;reflexivity;contradiction;inversion;inversion;simpl;destruct;inversion;destruct;inversion;subst;destruct;subst;right;left;apply;destruct;inversion;subst;simpl;destruct;reflexivity;contradiction;inversion;inversion
ghost_invariant_lower,core/GhostSimulations.v,4,intros;apply;assumption;assumption
outputs_m_inl_read_singleton,systems/PrimaryBackup.v,3,intros;simpl;reflexivity
inc_in_flight_to_backup_cons_primary_dst,systems/Counter.v,5,intros;unfold;simpl;rewrite;reflexivity
held_eventually_InputUnlock,systems/LiveLockServ.v,24,intros;unfold;destruct;unfold;specialize;assert;apply;intros;destruct;destruct;destruct;destruct;subst;exists;simpl;auto;exists;simpl;auto;exists;simpl;auto;apply;assumption
adjacent_to_symmetric,core/NameOverlay.v,8,unfold;intros;unfold;destruct;right;assumption;left;assumption
deserialize_serialize_onet_id,systems/SerializedMsgParamsCorrect.v,17,intros;unfold;destruct;simpl;f_equal;apply;intros;destruct;simpl;reflexivity;reflexivity;apply;intros;destruct;simpl;reflexivity;reflexivity
pt_map_onet_hd_step_ordered_failure_star,core/PartialMapExecutionSimulations.v,8,intros;induction;apply;apply;apply;simpl;apply;assumption
unlock_in_flight_all_clients_false,systems/LockServ.v,16,intros;unfold;unfold;specialize;specialize;destruct;auto;exfalso;apply;exists;split;auto;unfold;specialize;rewrite;assumption
root_unique,core/NameOverlay.v,6,intros;unfold;destruct;destruct;apply;assumption
dup_drop_swap,core/DupDropReordering.v,2,intros;apply
step_async_pt_ext_mapped_simulation_1,core/PartialExtendedMapSimulations.v,4463,intros;inversion;subst;left;exists;constructor;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite
trace_inputs_app,systems/Counter.v,5,intros;unfold;rewrite;rewrite;reflexivity
MsgLock_in_queue_or_Locked,systems/LiveLockServ.v,21,intros;unfold;destruct;specialize;destruct;left;unfold;exists;simpl;apply;right;unfold;exists;exists;simpl;apply;exfalso;apply;exists;split;assumption
pt_map_odnet_hd_step_ordered_dynamic_failure_star_always,core/PartialMapExecutionSimulations.v,6,intros;apply;apply;unfold;rewrite;assumption
inputs_m_on_nil,systems/PrimaryBackup.v,1,reflexivity
weak_fairness_extensional,core/LabeledNet.v,17,move;apply;apply;move;apply;move;exists;move;apply;move;apply;move;move;move;rewrite;apply;assumption
ZOOOPST_singleton_inl,systems/PrimaryBackup.v,13,intros;unfold;intros;simpl;destruct;inversion;subst;exists;split;left;reflexivity;assumption;inversion
step_ordered_dynamic_failure_serialize_simulation_star,systems/SerializedMsgParamsCorrect.v,31,intros;generalize_dependent;induction;intros;subst;constructor;destruct;destruct;inversion;subst;apply;apply;auto;apply;auto;apply;apply;auto;apply;apply;apply;apply;apply;apply;apply;auto;apply;apply;apply;apply;apply
outputs_m_read_response_singleton,systems/PrimaryBackup.v,3,intros;simpl;reflexivity
map_tot_map_trace_eq,core/TotalMapSimulations.v,7,intros;unfold;rewrite;apply;intros;simpl;reflexivity
transformer,systems/PrimaryBackup.v,15,intros;generalize_dependent;induction;intros;subst;apply;constructor;destruct;specialize;apply;apply;apply;apply;apply;reflexivity
InputLock_Lock,systems/LiveLockServ.v,25,intros;unfold;destruct;unfold;unfold;simpl;destruct;contradiction;simpl;destruct;destruct;simpl;contradiction;destruct;contradiction;subst;unfold;exists;simpl;unfold;simpl;unfold;simpl;left;reflexivity
pt_map_in_snd,core/PartialMapSimulations.v,18,intros;unfold;apply;destruct;unfold;destruct;simpl;destruct;simpl;destruct;subst;inversion;subst;rewrite;inversion;reflexivity;inversion;inversion
messages_trigger_labels,systems/LiveLockServ.v,23,intros;unfold;intros;induction;exists;split;apply;simpl;apply;assumption;destruct;destruct;exists;split;assumption;left;assumption;exists;split;apply;assumption;right;apply
NOABT_nil,systems/PrimaryBackup.v,4,intros;unfold;intros;inversion
empty_queue_all_clients_false,systems/LiveLockServ.v,13,intros;unfold;specialize;destruct;auto;exfalso;apply;exists;split;auto;rewrite;simpl;constructor
true_in_reachable_elim,core/Net.v,9,intros;unfold;split;apply;apply;intros;apply;apply;eauto
eventually_Unlock,systems/LiveLockServ.v,36,intros;unfold;destruct;unfold;unfold;assert;subst;assumption;clear;induction;simpl;subst;exists;apply;intros;destruct;simpl;subst;simpl;unfold;left;reflexivity;simpl;destruct;subst;simpl;apply;destruct;exists;assumption;subst;simpl;apply;destruct;exists;assumption
simulation,systems/PrimaryBackup.v,11,intros;induction;apply;inversion;subst;apply;assumption;apply;apply;assumption;apply
step_star_lb_step_execution,core/LabeledNet.v,10,intros;unfold;intros;induction;simpl;assumption;simpl;destruct;apply;assumption
InputLock_eventually_MsgLock,systems/LiveLockServ.v,31,intros;unfold;destruct;destruct;exists;apply;destruct;induction;simpl;contradiction;simpl;destruct;subst;unfold;destruct;destruct;unfold;simpl;unfold;left;assumption;destruct;unfold;simpl;unfold;left;assumption;apply;unfold;right;assumption
true_in_reachable_transform,systems/SeqNumCorrect.v,21,intros;unfold;intros;apply;clear;induction;apply;assumption;apply;apply;unfold;unfold;destruct;exists;split;assumption;destruct;simpl;unfold;simpl;assumption
unlock_in_flight_all_clients_false,systems/LiveLockServ.v,16,intros;unfold;unfold;specialize;specialize;destruct;auto;exfalso;apply;exists;split;auto;unfold;specialize;rewrite;assumption
processPackets_nums_unique,systems/SeqNumCorrect.v,83,intros;unfold;inversion;subst;clear;destruct;simpl;assert;rewrite;reflexivity;clear;revert;induction;intros;simpl;inversion;subst;simpl;contradiction;simpl;destruct;inversion;subst;simpl;destruct;destruct;subst;contradiction;apply;destruct;rewrite;assert;intros;apply;destruct;simpl;destruct;inversion;reflexivity;destruct;inversion;reflexivity;simpl;destruct;inversion;reflexivity;destruct;inversion;reflexivity;apply;simpl;congruence;destruct;apply;destruct;rewrite;assert;intros;apply;destruct;simpl;destruct;inversion;reflexivity;destruct;inversion;reflexivity;simpl;destruct;inversion;reflexivity;destruct;inversion;reflexivity;apply;simpl;congruence;apply;auto;simpl;inversion;subst;auto
tot_map_trace_occ_in_inv,core/TotalMapSimulations.v,19,intros;destruct;simpl;discriminate;destruct;destruct;discriminate;inversion;subst;exists;repeat;split;auto;inversion;subst;exists;repeat;split;auto
mgv_map_id_tr,core/GhostSimulations.v,12,intros;induction;reflexivity;simpl;destruct;simpl;f_equal;apply;simpl;f_equal;rewrite;apply
ghost_simulation_2,core/GhostSimulations.v,21,intros;inversion;subst;exists;split;constructor;rewrite;assumption;assumption;simpl;rewrite;reflexivity;exists;split;constructor;rewrite;assumption;assumption;simpl;rewrite;reflexivity
pt_ext_map_update_eq_some,core/PartialExtendedMapSimulations.v,9,intros;apply;intros;unfold;destruct;subst;rewrite;reflexivity;reflexivity
dup_drop_in,core/DupDropReordering.v,26,intros;induction;assumption;destruct;subst;apply;apply;apply;apply;apply;simpl;right;apply;right;assumption;subst;apply;apply;apply;apply;apply;simpl;right;apply;right;assumption
remove_eq_o,lib/FMapVeryWeak.v,9,intros;unfold;destruct;rewrite;apply;reflexivity;exfalso;apply;assumption
ZOOOPST_app,systems/PrimaryBackup.v,8,intros;unfold;intros;apply;apply;assumption;apply;assumption
tot_map_update_packet_eq,core/TotalMapSimulations.v,9,intros;apply;intros;unfold;destruct;subst;rewrite;reflexivity;reflexivity
locks_correct_unlock_net_handlers_old,systems/LiveLockServ.v,16,intros;unfold;intros;destruct;subst;unfold;specialize;rewrite;destruct;inversion;subst;assumption;unfold;rewrite;auto;apply
step_ordered_dynamic_failure_tot_mapped_simulation_1,core/TotalMapSimulations.v,378,intros;generalize_dependent;generalize_dependent;generalize_dependent;generalize_dependent;generalize_dependent;induction;intros;subst;constructor;simpl;constructor;apply;auto;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity;unfold;simpl;destruct;reflexivity;exfalso;apply;reflexivity
step_async_star_lb_step_execution,core/LabeledNet.v,11,intros;cofix;constructor;assumption;destruct;inversion;apply;apply;apply;apply;apply
processInputs_nil_defn,systems/PrimaryBackup.v,3,intros;simpl;reflexivity
LockServ_nwnw_net_handlers_new_new,systems/LockServ.v,25,intros;unfold;unfold;intros;split;intros;unfold;specialize;simpl;apply;apply;exists;split;auto;assumption;intros;unfold;specialize;simpl;apply;apply;exists;split;auto;assumption
Unlock_enables_MsgUnlock,systems/LiveLockServ.v,0,
not_in_failed_in_exclude,core/TotalMapSimulations.v,26,intros;induction;simpl;contradiction;simpl;simpl;destruct;subst;destruct;exfalso;apply;assumption;left;reflexivity;destruct;right;apply;assumption;simpl;destruct;exfalso;apply;assumption;right;apply;assumption
lb_step_failure_pt_mapped_simulation_1_non_silent,core/PartialMapExecutionSimulations.v,0,
ServerNetHandler_cases,systems/LiveLockServ.v,35,intros;unfold;break_match;find_inversion;simpl;repeat;break_match;find_inversion;simpl;repeat;split;eauto;congruence;right;left;repeat;split;eauto;congruence;exists;repeat;split;eauto;congruence;right;right;repeat;split;eauto;congruence;exists;repeat;split;eauto;congruence
strong_fairness_extensional,core/LabeledNet.v,10,move;rewrite;move;apply;move;destruct;exists;move;apply;assumption
trace_mutual_exclusion'_extend_input_server,systems/LiveLockServ.v,25,intros;unfold;intros;specialize;assert;destruct;left;apply;assumption;right;split;rewrite;lia;replace;lia;simpl;reflexivity;lia;destruct;apply;assumption;subst;simpl;apply;lia
step_ordered_dynamic_failure_serialize_simulation,systems/SerializedMsgParamsCorrect.v,3266,intros;inversion;subst;simpl;apply;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption;unfold;simpl;rewrite;assumption
pt_map_in_in,core/PartialMapSimulations.v,0,
trace_mutex'_locked_extend,systems/LiveLockServ.v,34,intros;unfold;intros;destruct;apply;destruct;apply;auto;simpl;destruct;inversion;apply;auto;apply;destruct;apply;auto;simpl;destruct;contradiction;apply;destruct;apply;auto;simpl;destruct;contradiction;inversion;inversion;subst;unfold;destruct;discriminate;reflexivity
trace_mutex'_no_out_extend,systems/LockServ.v,15,intros;unfold;intros;specialize;destruct;apply;destruct;apply;assumption;inversion;apply;destruct;apply;assumption;inversion
not_in_failed_not_in,core/TotalMapSimulations.v,8,intros;unfold;intros;apply;destruct;subst;apply;assumption
last_holder'_input_inv_server,systems/LiveLockServ.v,35,intros;unfold;destruct;apply;destruct;apply;destruct;apply;split;auto;apply;destruct;destruct;simpl;discriminate;injection;intros;subst;assumption;simpl;destruct;contradiction;injection;intros;subst;apply;split;auto;apply;exists;split;auto;simpl;reflexivity;discriminate
ordered_dynamic_state_not_initialized_not_failed,core/DynamicNetLemmas.v,43,intros;induction;intros;subst;simpl;intros;contradiction;subst;simpl;destruct;destruct;subst;simpl;destruct;subst;exfalso;apply;simpl;left;reflexivity;apply;auto;simpl;intros;apply;simpl;right;assumption;destruct;subst;simpl;apply;auto;destruct;subst;simpl;apply;auto;destruct;subst;simpl;apply;auto
processPackets_NoDup,systems/SeqNumCorrect.v,30,intros;induction;intros;simpl;inversion;constructor;simpl;destruct;destruct;inversion;subst;constructor;unfold;intros;apply;destruct;simpl;destruct;inversion;subst;apply;contradiction;inversion;apply;reflexivity;apply;inversion;subst;constructor;assumption
ClientNetHandler_cases,systems/LiveLockServ.v,12,intros;unfold;destruct;simpl;inversion;subst;clear;split;auto;right;split;auto
nodup,systems/LockServ.v,2,unfold;apply
RT1n_step,core/Net.v,8,intros;induction;apply;assumption;apply;auto;rewrite;apply
locks_correct_net_handlers,systems/LockServ.v,11,intros;unfold;intros;destruct;subst;rewrite;apply;eauto;rewrite;auto;apply
step_ordered_failure_pt_ext_mapped_simulation_star_1,core/PartialExtendedMapSimulations.v,22,intros;generalize_dependent;generalize_dependent;induction;intros;subst;exists;constructor;destruct;destruct;simpl;destruct;apply;destruct;specialize;destruct;exists;apply;constructor;auto;rewrite;assumption
locks_correct_unlock_true_to_false,systems/LiveLockServ.v,15,intros;unfold;intros;destruct;subst;rewrite;inversion;subst;rewrite;discriminate;rewrite;auto;unfold;apply;auto
input_handlers_InputHandlers,systems/Counter.v,4,intros;unfold;rewrite;reflexivity
ordered_dynamic_uninitialized_state,core/DynamicNetLemmas.v,643,intros;induction;intros;simpl;reflexivity;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct;destruct
lb_step_ordered_dynamic_failure_tot_mapped_simulation_1,core/TotalMapExecutionSimulations.v,0,
last_holder_some_unlock_inv,systems/LockServ.v,16,intros;unfold;destruct;apply;destruct;rewrite;assumption;simpl;destruct;rewrite;assumption;simpl;destruct;inversion;discriminate;discriminate
pbj_NOABT,systems/PrimaryBackup.v,0,
locks_correct_update_true,systems/LockServ.v,17,intros;unfold;intros;destruct;subst;unfold;rewrite;reflexivity;unfold;specialize;rewrite;assumption;unfold;rewrite;assumption;apply;assumption
refl_trans_1n_trace_n1_ind,core/Net.v,5,intros;induction;apply;apply;eauto
ordered_dynamic_nodes_no_dup,core/DynamicNetLemmas.v,0,
serialize_odnet_tot_map_odnet,systems/SerializedMsgParamsCorrect.v,5,intros;unfold;apply;intros;reflexivity
locks_correct_locked_sent_unlock,systems/LiveLockServ.v,18,intros;unfold;intros;destruct;simpl;destruct;apply;subst;rewrite;discriminate;auto;simpl;destruct;apply;subst;rewrite;auto;auto
deserialize_serialize_net_id,systems/SerializedMsgParamsCorrect.v,5,intros;unfold;destruct;simpl;reflexivity
pt_map_onet_tot_map_labeled_event_inf_often_enabled,core/PartialMapExecutionSimulations.v,38,intros;apply;unfold;apply;apply;apply;intros;unfold;destruct;simpl;unfold;simpl;unfold;destruct;simpl;congruence;destruct;apply;subst;assumption;discriminate;assumption;intros;unfold;destruct;simpl;unfold;simpl;unfold;destruct;simpl;congruence;destruct;apply;subst;assumption;discriminate;assumption
step_ordered_dynamic_failure_tot_one_mapped_simulation_1,core/SingleSimulations.v,0,
correspond_preserved_primary_same_no_outputs,systems/PrimaryBackup.v,9,intros;unfold;destruct;split;assumption;rewrite;rewrite;simpl;assumption
locks_correct_unlock_input_handlers_new,systems/LiveLockServ.v,59,intros;unfold;unfold;intros;destruct;subst;specialize;rewrite;destruct;destruct;simpl;destruct;inversion;subst;simpl;destruct;contradiction;inversion;subst;simpl;rewrite;simpl;destruct;contradiction;simpl;rewrite;simpl;destruct;contradiction;simpl;rewrite;simpl;reflexivity;simpl;destruct;inversion;subst;simpl;destruct;contradiction;inversion;subst;simpl;rewrite;simpl;destruct;contradiction;simpl;rewrite;simpl;destruct;contradiction;simpl;rewrite;simpl;reflexivity;rewrite;assumption;apply
step_ordered_failure_pt_mapped_simulation_star_1,core/PartialMapSimulations.v,24,intros;generalize_dependent;induction;intros;subst;constructor;destruct;destruct;inversion;subst;inversion;subst;simpl;destruct;econstructor;eauto;rewrite;rewrite;rewrite;f_equal;apply;exists;split;auto
tot_map_onet_label_event_inf_often_occurred,core/TotalMapExecutionSimulations.v,10,intros;apply;apply;intros;simpl;unfold;destruct;simpl;reflexivity;assumption
mgv_ghost_invariant_lift,core/GhostSimulations.v,4,intros;apply;assumption;assumption
true_in_reachable_reqs,core/Net.v,6,unfold;intros;induction;assumption;apply;eauto
outputs_m_inr_primary_singleton,systems/PrimaryBackup.v,4,intros;simpl;rewrite;reflexivity
pt_map_odnet_deserialize_odnet,systems/SerializedMsgParamsCorrect.v,15,intros;unfold;destruct;simpl;f_equal;apply;intros;unfold;destruct;reflexivity;apply;intros;unfold;destruct;reflexivity
pt_map_onet_tot_map_labeled_event_state_continuously_enabled,core/PartialMapExecutionSimulations.v,37,intros;apply;apply;intros;specialize;unfold;simpl;destruct;destruct;simpl;unfold;simpl;inversion;subst;clear;simpl;destruct;exists;split;auto;destruct;left;destruct;split;auto;intro;apply;rewrite;reflexivity;right;destruct;split;auto;intro;apply;rewrite;assumption
LockServ_nwnw_input_handlers_old_new,systems/LockServ.v,22,intros;unfold;unfold;intros;destruct;apply;subst;specialize;destruct;specialize;assert;apply;auto;contradiction;apply;specialize;destruct;specialize;assert;apply;auto;contradiction
step_ordered_failure_serialize_simulation_star,systems/SerializedMsgParamsCorrect.v,17,intros;induction;subst;apply;destruct;destruct;simpl;apply;apply;auto;inversion;subst;apply;apply;apply;eauto;reflexivity
clients_only_move_up_in_queue,systems/LiveLockServ.v,72,intros;apply;intros;destruct;subst;right;split;simpl;assumption;intros;simpl;left;exists;simpl;assumption;left;exists;split;assumption;intros;inversion;subst;clear;simpl;destruct;inversion;subst;clear;simpl;assumption;simpl;destruct;inversion;subst;clear;simpl;assumption;intros;destruct;subst;right;split;simpl;assumption;intros;simpl;left;exists;simpl;assumption;left;exists;split;assumption;intros;inversion;subst;clear;simpl;destruct;inversion;subst;clear;simpl;assumption;simpl;destruct;inversion;subst;clear;simpl;assumption
net_handlers_NetHandler,systems/Counter.v,6,intros;unfold;simpl;injection;rewrite;reflexivity
locks_correct_update_false,systems/LockServ.v,10,intros;unfold;intros;destruct;subst;rewrite;assumption;rewrite;assumption;apply
input_eq_dec,systems/VarD.v,2,decide_equality;apply
dup_drop_reorder,core/DupDropReordering.v,18,intros;induction;apply;assert;apply;left;reflexivity;apply;destruct;rewrite;apply;apply;apply;apply;intros;apply;right;assumption
inputs_eq_outputs_plus_inc_plus_ack,systems/Counter.v,32,intros;induction;simpl;reflexivity;destruct;simpl;destruct;simpl;inversion;subst;simpl;rewrite;simpl;unfold;simpl;lia;inversion;subst;simpl;rewrite;simpl;unfold;simpl;lia;inversion;subst;simpl;rewrite;simpl;unfold;simpl;lia
ZOOOPST_tail,systems/PrimaryBackup.v,4,intros;inversion;subst;assumption
step_1_star_trace_correct',systems/VarD.v,9,intros;induction;constructor;inversion;subst;constructor;auto;constructor;auto
step_async_tot_mapped_simulation_star_1,core/TotalMapSimulations.v,11,intros;induction;subst;apply;inversion;subst;apply;apply;reflexivity;apply;assumption
last_holder_unlock_none,systems/LiveLockServ.v,23,intros;unfold;destruct;destruct;destruct;discriminate;simpl;inversion;subst;rewrite;simpl;rewrite;simpl;destruct;destruct;destruct;discriminate;simpl;reflexivity;simpl;reflexivity;simpl;discriminate
locks_correct_implies_mutex,systems/LockServ.v,12,intros;unfold;unfold;intros;specialize;destruct;destruct;auto;exfalso;apply;split;auto
outputs_m_on_nil,systems/PrimaryBackup.v,1,reflexivity
tot_map_odnet_label_event_inf_often_occurred,core/TotalMapExecutionSimulations.v,7,intros;apply;apply;intros;simpl;reflexivity;assumption
tot_map_odnet_label_event_inf_often_occurred_conv,core/TotalMapExecutionSimulations.v,14,intros;unfold;intros;specialize;destruct;exists;split;auto;unfold;unfold;simpl;unfold;unfold;assumption
add_neq_o,lib/FMapVeryWeak.v,5,intros;unfold;destruct;contradiction;reflexivity
nw_nw_distinct_pairs_and_elim,core/StatePacketPacketDecomposition.v,9,intros;subst;unfold;apply;apply;right;simpl;apply;assumption
last_holder'_unlock_none,systems/LockServ.v,20,intros;induction;simpl;discriminate;simpl;destruct;destruct;discriminate;destruct;discriminate;simpl;rewrite;rewrite;reflexivity;simpl;rewrite;destruct;discriminate;simpl;reflexivity
trace_correct'_trace_correct,systems/VarD.v,17,intros;unfold;destruct;simpl;constructor;destruct;constructor;assumption;revert;induction;intros;constructor;destruct;constructor;assumption;apply;assumption
outputs_m_inr_nil,systems/PrimaryBackup.v,3,intros;simpl;reflexivity
step_async_pt_mapped_simulation_star_1,core/PartialMapSimulations.v,22,intros;induction;exists;split;constructor;simpl;reflexivity;destruct;destruct;destruct;exists;split;apply;eassumption;apply;eassumption;simpl;rewrite;simpl;rewrite;rewrite;reflexivity
locks_correct_locked_input_handlers_old,systems/LockServ.v,19,intros;unfold;intros;destruct;subst;rewrite;destruct;left;assumption;right;intros;apply;apply;eauto;rewrite;assumption;apply;apply;eauto
transformed_correctness,systems/LockServSeqNum.v,4,intros;apply;apply;eauto
step_ordered_failure_star_lb_step_execution,core/LabeledNet.v,10,intros;unfold;intros;induction;simpl;assumption;simpl;destruct;apply;apply
locks_correct_locked_net_handlers_old,systems/LockServ.v,22,intros;unfold;intros;specialize;unfold;intros;destruct;subst;rewrite;inversion;subst;specialize;unfold;specialize;rewrite;destruct;simpl;auto;rewrite;auto;specialize;auto
step_1_star_trace_correct,systems/VarD.v,17,intros;induction;unfold;simpl;intros;contradiction;unfold;intros;destruct;subst;apply;constructor;apply;intros;apply;constructor;assumption
inputs_ge_outputs,systems/Counter.v,30,intros;induction;simpl;reflexivity;destruct;simpl;unfold;destruct;destruct;unfold;destruct;specialize;simpl;unfold;destruct;apply;subst;simpl;lia;simpl;lia;destruct;specialize;simpl;unfold;destruct;simpl;lia;apply;contradiction
inputs_m_primary_inl,systems/PrimaryBackup.v,3,intros;simpl;reflexivity
refl_trans_1n_n1_trace,core/Net.v,5,intros;induction;apply;apply;eauto
step_async_deserialized_simulation_star,systems/SerializedMsgParamsCorrect.v,35,intros;induction;subst;exists;split;constructor;reflexivity;destruct;destruct;destruct;simpl;exists;split;apply;apply;apply;eauto;simpl;rewrite;simpl;rewrite;reflexivity;destruct;simpl;exists;split;apply;apply;apply;eauto;simpl;rewrite;simpl;rewrite;reflexivity
output_eq_dec,systems/VarD.v,2,decide_equality;apply
InputHandler_inc_in_flight_to_backup_preserved,systems/Counter.v,7,intros;unfold;destruct;simpl;inversion;subst;reflexivity
step_failure_star_lb_step_execution,core/LabeledNet.v,7,intros;cofix;constructor;assumption;destruct;apply;assumption
tot_map_trace_occ_inv,core/TotalMapSimulations.v,13,intros;destruct;simpl;discriminate;simpl;inversion;subst;clear;exists;split;reflexivity;split;reflexivity
Nth_something_at_head,systems/LiveLockServ.v,5,intros;destruct;inversion;exists;reflexivity
step_ordered_dynamic_failure_star_lb_step_reachable,core/LabeledNet.v,34,unfold;intros;induction;exists;split;apply;intros;exists;split;constructor;reflexivity;destruct;destruct;exists;split;apply;assumption;intros;destruct;simpl;exists;split;constructor;reflexivity;simpl;specialize;destruct;exists;split;constructor;assumption;simpl;f_equal;assumption
Unlock_delivered_MsgUnlock,systems/LiveLockServ.v,4,intros;unfold;simpl;reflexivity
ghost_simulation_1,core/GhostSimulations.v,15,intros;inversion;subst;constructor;simpl;assumption;simpl;assumption;constructor;simpl;assumption;simpl;assumption;simpl;assumption
message_labels_eventually_occur,systems/LiveLockServ.v,71,intros;unfold;apply;intros;unfold;destruct;exists;split;assumption;unfold;destruct;left;assumption;right;assumption;exists;split;assumption;unfold;destruct;left;assumption;right;assumption;intros;unfold;destruct;exists;split;assumption;unfold;exists;split;assumption;unfold;left;assumption;exists;split;assumption;unfold;exists;split;assumption;unfold;right;assumption;assumption;intros;unfold;destruct;exists;split;assumption;unfold;exists;split;assumption;unfold;left;assumption;exists;split;assumption;unfold;exists;split;assumption;unfold;right;assumption
ServerNetHandler_lbcases,systems/LiveLockServ.v,29,intros;unfold;break_match;find_inversion;simpl;intuition;right;right;intuition;left;eexists;intuition;destruct;simpl;intuition;destruct;simpl;intuition;right;left;intuition;destruct;simpl;intuition;exfalso;eauto;eexists;eexists;intuition
nodup_to_map_name,core/TotalMapSimulations.v,12,intros;induction;constructor;simpl;constructor;intro;apply;apply;destruct;subst;assumption;apply
last_holder'_locked_some_eq,systems/LiveLockServ.v,8,intros;unfold;destruct;simpl;inversion;reflexivity;simpl;inversion
mgv_ghost_simulation_2,core/GhostSimulations.v,0,
nwnw_lock,systems/LockServ.v,8,intros;unfold;intros;destruct;simpl;subst;auto;discriminate
locks_correct_locked_net_handlers_old,systems/LiveLockServ.v,16,intros;unfold;intros;destruct;subst;rewrite;apply;eauto;apply;assumption;apply;eauto;rewrite;assumption;apply;assumption
step_ordered_failure_star_lb_step_reachable,core/LabeledNet.v,15,unfold;intros;induction;exists;split;apply;assumption;destruct;exists;split;apply;eauto;apply;assumption;assumption
NetHandler_inc_in_flight_to_backup_preserved,systems/Counter.v,14,intros;unfold;simpl;rewrite;rewrite;simpl;rewrite;f_equal;unfold;destruct;inversion;subst;simpl;reflexivity
NOABT_contra,systems/PrimaryBackup.v,13,intros;destruct;left;reflexivity;right;destruct;exfalso;simpl;apply;reflexivity;exists;simpl;reflexivity
step_ordered_pt_mapped_simulation_star_1,core/PartialMapSimulations.v,11,intros;induction;subst;constructor;simpl;destruct;apply;apply;assumption;constructor;assumption
held_eventually_Unlock,systems/LiveLockServ.v,36,intros;unfold;destruct;unfold;unfold;assert;apply;intros;unfold;destruct;simpl;destruct;simpl;contradiction;destruct;simpl;contradiction;exists;simpl;left;reflexivity;simpl;rewrite;discriminate;intros;destruct;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;destruct;exists;rewrite;assumption
inductive_simulation,systems/PrimaryBackup.v,8,intros;induction;apply;apply;apply;apply;apply;assumption
pt_map_odnet_tot_map_labeled_event_inf_often_enabled,core/PartialMapExecutionSimulations.v,0,
decomposition_reachable_nw_invariant,systems/LockServ.v,18,intros;induction;simpl;inversion;destruct;inversion;subst;simpl;destruct;apply;auto;assert;apply;auto;clear;apply;auto;contradiction
at_head_of_queue_intro,systems/LiveLockServ.v,4,intros;unfold;rewrite;reflexivity
step_async_serialize_simulation_star,systems/SerializedMsgParamsCorrect.v,11,intros;induction;subst;apply;inversion;subst;apply;apply;reflexivity;apply;assumption
locks_correct_unlock_input_handlers_old,systems/LiveLockServ.v,11,intros;unfold;intros;destruct;subst;rewrite;contradiction;rewrite;assumption;apply;assumption
index_inj,lib/FMapVeryWeak.v,4,intros;unfold;apply;assumption
last_holder'_input_inv,systems/LockServ.v,27,intros;unfold;destruct;apply;destruct;rewrite;reflexivity;destruct;congruence;destruct;destruct;congruence;destruct;congruence;congruence;apply;assert;apply;intros;specialize;apply;left;assumption;specialize;assumption;rewrite;assumption
step_ordered_failure_tot_mapped_simulation_1,core/TotalMapSimulations.v,0,
step_1_singleton_inversion,systems/PrimaryBackup.v,4,intros;inversion;subst;reflexivity
processPackets_dedup,systems/SeqNumCorrect.v,11,intros;unfold;rewrite;rewrite;f_equal;apply;apply;intros;apply;apply;assumption
step_ordered_dynamic_failure_tot_one_mapped_simulation_1_init,core/SingleSimulations.v,15,intros;inversion;subst;simpl;rewrite;discriminate;simpl;rewrite;discriminate;simpl;rewrite;discriminate;simpl;rewrite;discriminate
remove_In_elim,core/DupDropReordering.v,31,intros;split;intro;subst;induction;simpl;contradiction;simpl;destruct;apply;assumption;simpl;destruct;congruence;apply;assumption;induction;simpl;contradiction;simpl;destruct;right;apply;assumption;simpl;destruct;left;assumption;right;apply;assumption
nodup_tot_map,core/TotalMapSimulations.v,27,intros;induction;constructor;simpl;inversion;subst;constructor;intros;apply;destruct;simpl;inversion;subst;apply;apply;exists;split;auto;apply;rewrite;reflexivity;apply;intros;apply;right;assumption;assumption
InputUnlock_continuously_enabled,systems/LiveLockServ.v,18,intros;unfold;intros;destruct;exists;split;assumption;intros;unfold;destruct;specialize;destruct;exists;split;assumption;unfold;destruct;assumption
add_eq_o,lib/FMapVeryWeak.v,6,intros;unfold;rewrite;destruct;reflexivity;contradiction
locks_correct_locked_input_handlers_old,systems/LiveLockServ.v,12,intros;unfold;intros;destruct;subst;rewrite;apply;apply;rewrite;assumption;apply;apply
at_head_of_nil,systems/LiveLockServ.v,5,intros;unfold;rewrite;simpl;assumption
step_ordered_dynamic_star_lb_step_execution,core/LabeledNet.v,11,intros;unfold;intros;induction;simpl;assumption;simpl;destruct;apply;apply;apply
step_failure_serialize_simulation,systems/SerializedMsgParamsCorrect.v,44,intros;inversion;subst;simpl;constructor;assumption;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;constructor;assumption;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;constructor;assumption;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;constructor;assumption;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity
filterMap_pt_map_packet_map_eq,core/PartialMapSimulations.v,14,intros;induction;simpl;reflexivity;destruct;simpl;rewrite;simpl;rewrite;reflexivity;simpl;rewrite;simpl;assumption
locks_correct_init,systems/LockServ.v,0,
NOABT_cons,systems/PrimaryBackup.v,6,intros;unfold;simpl;split;apply;apply
ZOOOPST_nil,systems/PrimaryBackup.v,4,intros;unfold;intros;inversion
locks_correct_locked_intro,systems/LockServ.v,23,intros;unfold;intros;destruct;subst;simpl;unfold;destruct;contradiction;simpl;rewrite;simpl;destruct;congruence;simpl;auto;unfold;destruct;contradiction;simpl;unfold;apply;auto
ZOOOPST_head,systems/PrimaryBackup.v,4,intros;inversion;subst;assumption
nil_at_head_of_queue_preserved,systems/LockServ.v,5,intros;unfold;rewrite;simpl;assumption
locks_correct_unlock_input_handlers_old,systems/LockServ.v,11,intros;unfold;intros;destruct;subst;rewrite;contradiction;rewrite;assumption;apply;assumption
map_msg_fail_eq,core/TotalMapSimulations.v,45,intros;rewrite;apply;apply;intros;simpl;congruence;intros;simpl;unfold;destruct;destruct;simpl;reflexivity;exfalso;apply;apply;assumption;exfalso;apply;apply;assumption;intros;simpl;unfold;destruct;destruct;simpl;reflexivity;exfalso;apply;apply;assumption;exfalso;apply;apply;assumption;apply;intros;unfold;destruct;reflexivity;exfalso;apply;reflexivity
correspond_reachable,systems/PrimaryBackup.v,28,intros;induction;intros;inversion;subst;simpl;subst;constructor;simpl;subst;constructor;destruct;inversion;subst;clear;inversion;subst;simpl;subst;constructor;simpl;subst;assert;simpl;assumption;specialize;apply;eauto
held_until_Unlock,systems/LiveLockServ.v,19,intros;unfold;intros;induction;exists;split;assumption;simpl;destruct;auto;destruct;exists;split;simpl;rewrite;apply;simpl;destruct;auto
nodup_perm_map_map_pair_perm,core/TotalMapSimulations.v,18,intros;apply;apply;intros;inversion;reflexivity;apply;auto;intros;inversion;reflexivity;apply;auto;apply;rewrite;simpl;rewrite;assumption
lifting_applied,systems/VarDPrimaryBackup.v,16,intros;induction;simpl;constructor;simpl;inversion;subst;destruct;apply;apply;simpl;constructor;apply;apply;simpl;constructor
step_ordered_dynamic_failure_pt_ext_mapped_simulation_1,core/PartialExtendedMapSimulations.v,0,
locks_correct_locked_sent_lock,systems/LiveLockServ.v,8,intros;unfold;intros;rewrite;simpl;destruct;simpl;auto
clients_move_up_in_queue,systems/LiveLockServ.v,23,intros;assert;subst;assumption;assert;assumption;assert;assumption;assert;subst;assumption;apply;intros;destruct;destruct;split;admit;intros;admit;split;admit;intros;admit
trace_state_correct_trace_correct,systems/VarD.v,14,intros;unfold;unfold;intros;destruct;split;split;apply;eauto;rewrite;apply;auto;apply;eauto
positive_of_digits_inj,lib/FMapVeryWeak.v,42,intros;revert;induction;intros;destruct;simpl;discriminate;injection;intros;subst;auto;destruct;simpl;discriminate;simpl;destruct;destruct;discriminate;injection;intros;subst;apply;auto;destruct;subst;auto;injection;intros;subst;apply;auto;destruct;subst;auto;injection;intros;subst;apply;auto;destruct;subst;auto
msg_in_map,core/TotalMapSimulations.v,17,intros;induction;simpl;contradiction;simpl;destruct;inversion;subst;apply;left;reflexivity;apply;intros;apply;right;assumption;assumption
cons_is_app,systems/Counter.v,3,intros;simpl;reflexivity
eventually_MsgUnlock,systems/LiveLockServ.v,56,intros;unfold;destruct;unfold;destruct;assert;exists;simpl;assumption;clear;induction;destruct;exists;simpl;unfold;exists;split;reflexivity;unfold;simpl;exists;assumption;destruct;destruct;subst;simpl;assert;apply;constructor;inversion;subst;simpl;destruct;subst;exists;simpl;unfold;exists;split;reflexivity;unfold;simpl;exists;assumption;apply;exists;simpl;assumption;apply;exists;simpl;assumption;apply;exists;simpl;assumption
pt_map_update_eq_some,core/PartialMapSimulations.v,9,intros;apply;intros;unfold;destruct;subst;rewrite;reflexivity;reflexivity
pt_map_odnet_tot_map_label_event_state_weak_fairness,core/PartialMapExecutionSimulations.v,20,intros;unfold;intros;specialize;apply;intros;unfold;destruct;simpl;destruct;simpl;auto;intros;specialize;unfold;destruct;simpl;destruct;simpl;auto
in_failed_in,core/TotalMapSimulations.v,3,intros;apply;assumption
clients_get_lock_messages,systems/LiveLockServ.v,100,intros;apply;intros;unfold;destruct;unfold;specialize;assert;apply;intros;destruct;unfold;destruct;destruct;destruct;destruct;destruct;subst;simpl;apply;right;left;reflexivity;subst;simpl;apply;right;left;reflexivity;subst;simpl;apply;right;left;reflexivity;destruct;destruct;destruct;subst;simpl;apply;right;left;reflexivity;subst;simpl;apply;right;left;reflexivity;subst;simpl;apply;right;left;reflexivity;destruct;destruct;destruct;destruct;subst;simpl;apply;right;left;reflexivity;subst;simpl;apply;right;left;reflexivity;subst;simpl;apply;right;left;reflexivity;destruct;destruct;destruct;subst;simpl;apply;right;left;reflexivity;subst;simpl;apply;right;left;reflexivity;subst;simpl;apply;right;left;reflexivity;apply
cross_relation,systems/LiveLockServ.v,6,intros;intros;induction;assumption;apply;auto
locks_correct_locked_input_handlers_new,systems/LockServ.v,11,intros;unfold;intros;destruct;subst;rewrite;contradiction;rewrite;assumption;unfold;apply
locks_correct_unlock_sent_locked,systems/LockServ.v,20,intros;unfold;intros;destruct;contradiction;exists;split;auto;unfold;specialize;destruct;exists;split;auto;unfold;specialize;destruct;exists;split;auto
step_failure_dup_drop_step,core/DupDropReordering.v,7,intros;induction;apply;apply;apply;apply;assumption
step_ordered_dynamic_failure_star_lb_step_execution,core/LabeledNet.v,7,intros;cofix;constructor;assumption;destruct;apply;assumption
name_eq_dec,systems/PrimaryBackup.v,1,decide_equality
true_in_reachable_mutual_exclusion,systems/LockServ.v,38,apply;intros;unfold;intros;destruct;destruct;destruct;apply;subst;contradiction;exfalso;apply;split;assumption;destruct;apply;subst;contradiction;exfalso;apply;split;assumption;destruct;apply;subst;contradiction;exfalso;apply;split;assumption;destruct;apply;subst;contradiction;exfalso;apply;split;assumption
nw_empty_queue_lock,systems/LiveLockServ.v,15,intros;unfold;specialize;destruct;auto;exfalso;apply;destruct;simpl;congruence;exfalso;apply;destruct;simpl;congruence
remove_tot_map_eq,core/TotalMapSimulations.v,0,
lb_step_trace_execution_lb_step_failure_tot_map_net_infseq,core/TotalMapExecutionSimulations.v,37,intros;unfold;destruct;exists;split;apply;assumption;intros;specialize;unfold;destruct;left;destruct;exists;split;apply;assumption;rewrite;assumption;right;destruct;left;destruct;exists;split;apply;assumption;rewrite;assumption;right;destruct;exists;split;apply;assumption;rewrite;assumption
tot_map_net_hd_step_failure_star_always,core/TotalMapExecutionSimulations.v,7,intros;apply;unfold;destruct;unfold;simpl;assumption
nwnw_sym,systems/LiveLockServ.v,5,intros;unfold;intros;specialize;assumption
in_tot_map_msg,core/TotalMapSimulations.v,12,intros;apply;exists;split;simpl;f_equal;unfold;rewrite;reflexivity;apply;assumption;assumption
locks_correct_unlock_at_head_preserved,systems/LiveLockServ.v,15,intros;unfold;intros;specialize;assert;apply;assumption;apply;unfold;destruct;subst;rewrite;assumption;rewrite;auto
locking_clients_eventually_receive_lock_lb,systems/LiveLockServ.v,17,intros;unfold;apply;destruct;exists;unfold;unfold;simpl;assumption;intros;unfold;destruct;apply;unfold;unfold;simpl;assumption
in_all_before_pt_map_msg,core/PartialMapSimulations.v,31,intros;induction;simpl;constructor;simpl;destruct;simpl;constructor;unfold;simpl;destruct;unfold;simpl;split;intros;destruct;subst;rewrite;inversion;subst;assumption;apply;right;assumption;apply;assumption;apply;destruct;assumption;apply;assumption
step_failure_tot_mapped_simulation_1,core/TotalMapSimulations.v,31,intros;inversion;subst;constructor;rewrite;reflexivity;rewrite;reflexivity;rewrite;reflexivity;constructor;rewrite;reflexivity;rewrite;reflexivity;rewrite;reflexivity;constructor;rewrite;reflexivity;rewrite;reflexivity;rewrite;reflexivity;constructor;rewrite;reflexivity;rewrite;reflexivity;rewrite;reflexivity
NOABT_singleton_inr_nil,systems/PrimaryBackup.v,11,intros;unfold;simpl;intros;destruct;simpl;destruct;discriminate;destruct;discriminate;reflexivity
lb_step_failure_pt_mapped_simulation_1_silent,core/PartialMapExecutionSimulations.v,20,intros;inversion;subst;split;constructor;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;reflexivity;discriminate
locks_correct_input_handlers,systems/LockServ.v,11,intros;unfold;intros;destruct;subst;rewrite;apply;eauto;rewrite;auto;apply
all_clients_false_locks_correct_server_update,systems/LockServ.v,12,intros;unfold;intros;unfold;destruct;subst;specialize;rewrite;reflexivity;specialize;rewrite;reflexivity
pt_map_onet_hd_step_ordered_failure_star_always,core/PartialMapExecutionSimulations.v,7,intros;apply;unfold;destruct;unfold;simpl;assumption
pt_in_tot_map_name,core/PartialMapSimulations.v,17,intros;unfold;apply;destruct;unfold;destruct;discriminate;inversion;subst;specialize;assert;assumption;apply;simpl;subst;unfold;assumption
In_n_Nodes,systems/LiveLockServ.v,3,intros;unfold;apply
nil_at_head_of_queue_preserved,systems/LiveLockServ.v,5,intros;unfold;rewrite;simpl;assumption
step_ordered_failure_tot_one_mapped_simulation_star_1,core/SingleSimulations.v,27,intros;induction;subst;simpl;exists;constructor;destruct;destruct;destruct;subst;specialize;destruct;specialize;destruct;exists;apply;assumption;apply;exists;split;assumption;constructor;assumption;subst;simpl;exists;constructor
last_holder'_input_inv_server,systems/LockServ.v,19,intros;unfold;destruct;apply;destruct;rewrite;assumption;simpl;destruct;rewrite;assumption;simpl;destruct;inversion;subst;rewrite;assumption;discriminate;discriminate
last_holder'_unlock_none,systems/LiveLockServ.v,29,intros;unfold;destruct;destruct;destruct;discriminate;simpl;destruct;destruct;destruct;discriminate;simpl;rewrite;simpl;rewrite;simpl;destruct;discriminate;simpl;discriminate;simpl;rewrite;simpl;rewrite;simpl;destruct;discriminate;reflexivity;discriminate
dup_drop_step_star_remove_In,core/DupDropReordering.v,20,intros;induction;simpl;destruct;subst;constructor;constructor;apply;assumption;apply;constructor;assumption;apply;simpl;destruct;subst;constructor;constructor;apply;assumption
locks_correct_locked_invariant,systems/LockServ.v,0,
trace_well_formed,systems/VarD.v,16,intros;induction;left;reflexivity;destruct;right;exists;simpl;rewrite;reflexivity;right;destruct;exists;simpl;rewrite;reflexivity
locks_correct_locked_intro,systems/LiveLockServ.v,23,intros;unfold;intros;destruct;subst;simpl;rewrite;injection;simpl;rewrite;simpl;auto;simpl;rewrite;auto;specialize;destruct;auto;destruct;injection;rewrite;discriminate;auto
NOABT_head,systems/PrimaryBackup.v,4,intros;unfold;simpl;apply
in_filterMap_pt_map_msg_in_msg,core/PartialMapSimulations.v,15,intros;induction;simpl;contradiction;simpl;destruct;simpl;destruct;subst;congruence;right;apply;assumption;apply;assumption
ordered_dynamic_initialized_state,core/DynamicNetLemmas.v,44,intros;induction;intros;subst;simpl;unfold;simpl;intros;exfalso;apply;eauto;destruct;destruct;simpl;destruct;subst;destruct;eauto;apply;eauto;unfold;simpl;rewrite;simpl;find_apply_lem_hyp;intuition;apply;eauto;apply;eauto;unfold;simpl;rewrite;simpl;find_apply_lem_hyp;intuition;apply;eauto;unfold;simpl;rewrite;simpl;find_apply_lem_hyp;intuition
mutual_exclusion_invariant,systems/LockServ.v,36,intros;unfold;intros;induction;unfold;simpl;contradiction;destruct;inversion;subst;simpl;destruct;destruct;subst;rewrite;rewrite;eauto;contradiction;rewrite;rewrite;auto;apply;eauto;rewrite;rewrite;auto;apply;eauto;rewrite;auto;rewrite;auto;apply;eauto;apply;eauto
locks_correct_unlock_input_handlers_new,systems/LockServ.v,33,intros;unfold;unfold;intros;destruct;subst;specialize;destruct;destruct;subst;rewrite;inversion;subst;rewrite;simpl;destruct;auto;contradiction;rewrite;auto;rewrite;simpl;destruct;auto;contradiction;rewrite;simpl;destruct;auto;contradiction;rewrite;auto;apply
pbj_0_or_1,systems/PrimaryBackup.v,2338,intros;induction;unfold;intros;inversion;unfold;intros;destruct;apply;destruct;subst;apply;destruct;specialize;apply;apply;right;left;reflexivity;assert;destruct;subst;reflexivity;exfalso;apply;right;assumption;subst;destruct;inversion;subst;simpl;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence;destruct;congruence
locks_correct_locked_sent_unlock,systems/LockServ.v,11,intros;unfold;intros;rewrite;simpl;destruct;destruct;simpl;auto;simpl;auto
step_ordered_dynamic_failure_deserialized_simulation_star,systems/SerializedMsgParamsCorrect.v,13,intros;induction;subst;constructor;destruct;destruct;simpl;destruct;apply;apply;eauto;apply;auto
collate_tot_map_eq,core/TotalMapSimulations.v,20,intros;apply;intros;apply;intros;unfold;rewrite;apply;intros;destruct;rewrite;rewrite;rewrite;rewrite;reflexivity;rewrite;rewrite;rewrite;rewrite;reflexivity
reachable_equality,systems/SeqNumCorrect.v,24,apply;intros;unfold;destruct;induction;simpl;reflexivity;simpl;destruct;destruct;destruct;destruct;rewrite;assumption;destruct;rewrite;assumption;destruct;destruct;rewrite;assumption;destruct;rewrite;assumption
ClientNetHandler_cases,systems/LockServ.v,11,intros;unfold;destruct;simpl;inversion;subst;clear;split;auto;split;auto
locking_clients_eventually_receive_lock_st,systems/LiveLockServ.v,13,intros;apply;apply;intros;destruct;exists;split;auto;apply;apply;intros;rewrite;assumption
lb_step_execution_lb_step_ordered_dynamic_failure_pt_map_odnet_infseq,core/PartialMapExecutionSimulations.v,0,
pt_map_onet_tot_map_label_event_state_weak_fairness,core/PartialMapExecutionSimulations.v,9,intros;unfold;intros;specialize;destruct;exists;unfold;rewrite;apply
collate_pt_map_eq,core/PartialMapSimulations.v,22,intros;apply;intros;apply;intros;unfold;rewrite;rewrite;apply;intros;destruct;simpl;destruct;simpl;auto;destruct;simpl;auto;rewrite;auto;rewrite;auto
step_1_snoc_inv,systems/PrimaryBackup.v,23,intros;generalize_dependent;induction;intros;discriminate;destruct;simpl;inversion;subst;exists;split;constructor;assumption;simpl;inversion;subst;apply;destruct;exists;split;constructor;assumption;assumption
inputs_1_nil_is_nil,systems/PrimaryBackup.v,5,intros;destruct;reflexivity;simpl;discriminate
in_adjacent_exclude_in_exlude,core/TotalMapSimulations.v,7,intros;apply;destruct;split;auto;apply;assumption
MsgUnlock_moves_client,systems/LiveLockServ.v,103,intros;destruct;unfold;destruct;contradiction;simpl;destruct;unfold;simpl;destruct;contradiction;simpl;destruct;destruct;unfold;destruct;destruct;unfold;destruct;unfold;simpl;unfold;simpl;destruct;simpl;exists;split;assumption;intros;simpl;left;reflexivity;exists;split;assumption;intros;inversion;destruct;unfold;destruct;unfold;simpl;unfold;simpl;destruct;simpl;exists;split;assumption;intros;simpl;left;reflexivity;exists;split;assumption;intros;inversion;destruct;unfold;destruct;destruct;unfold;destruct;unfold;simpl;unfold;simpl;destruct;simpl;exists;split;assumption;intros;simpl;left;reflexivity;exists;split;assumption;intros;inversion;destruct;unfold;destruct;unfold;simpl;unfold;simpl;destruct;simpl;exists;split;assumption;intros;simpl;left;reflexivity;exists;split;assumption;intros;inversion
step_1_star_no_trace_no_step,systems/PrimaryBackup.v,6,intros;inversion;subst;reflexivity;rewrite;discriminate
dup_drop_dup_early,core/DupDropReordering.v,12,intros;induction;apply;apply;apply;apply;apply;apply;apply;apply;apply;apply
trace_outputs_app,systems/Counter.v,5,intros;unfold;rewrite;rewrite;reflexivity
step_star_inductive,core/Net.v,6,intros;induction;assumption;apply;apply;eauto
nwnw_locked_lock,systems/LockServ.v,9,intros;unfold;specialize;destruct;congruence;specialize;destruct;congruence;reflexivity
inverse_trace_relations_work,core/InverseTraceRelations.v,8,intros;induction;apply;apply;apply;assumption;apply;assumption
primary_ge_backup,systems/Counter.v,38,intros;induction;subst;simpl;reflexivity;destruct;simpl;unfold;destruct;destruct;subst;destruct;subst;simpl;unfold;destruct;contradiction;destruct;congruence;simpl;apply;assumption;simpl;unfold;destruct;contradiction;destruct;congruence;simpl;assumption;simpl;unfold;destruct;congruence;destruct;congruence;simpl;assumption
dup_drop_step_star_step_1n,core/DupDropReordering.v,5,intros;apply;apply;assumption;assumption
PB_net_defn,systems/PrimaryBackup.v,46,intros;unfold;destruct;destruct;destruct;injection;subst;right;left;split;split;split;auto;exists;split;split;split;auto;destruct;left;auto;right;exists;auto;discriminate;destruct;injection;subst;right;left;split;split;split;auto;rewrite;auto;injection;subst;right;right;split;split;split;auto;exists;auto
LockServ_nwnw_input_handlers_new_new,systems/LockServ.v,0,
step_dup_star_revert_simulation,systems/SeqNumCorrect.v,28,intros;induction;exists;split;constructor;reflexivity;destruct;destruct;destruct;exists;split;apply;apply;apply;auto;simpl;rewrite;reflexivity;destruct;exists;split;apply;apply;apply;auto;simpl;rewrite;reflexivity
In_split_not_In,systems/LiveLockServ.v,18,intros;destruct;assumption;exfalso;apply;apply;right;apply;left;apply;destruct;apply;left;assumption;contradiction;apply;right;assumption
tot_map_onet_event_map_unfold,core/TotalMapExecutionSimulations.v,6,intros;destruct;simpl;reflexivity;simpl;reflexivity
ZOOOPST_singleton_nil,systems/PrimaryBackup.v,11,intros;unfold;intros;simpl;destruct;inversion;subst;simpl;left;reflexivity;inversion
pt_map_onet_deserialize_onet,systems/SerializedMsgParamsCorrect.v,13,intros;unfold;destruct;simpl;f_equal;apply;intros;destruct;reflexivity;apply;intros;destruct;reflexivity
locks_correct_at_head_preserved,systems/LockServ.v,6,intros;unfold;intros;specialize;apply;assumption
pt_map_odnet_event_Map_unfold,core/PartialMapExecutionSimulations.v,5,intros;destruct;reflexivity;simpl;reflexivity
Lock_enables_MsgLock,systems/LiveLockServ.v,4,intros;unfold;simpl;reflexivity
tot_map_in_in,core/TotalMapSimulations.v,15,intros;intro;apply;destruct;simpl;inversion;subst;apply;apply;exists;split;auto;apply;subst;reflexivity
deserialize_serialize_odnet_id,systems/SerializedMsgParamsCorrect.v,7,intros;unfold;destruct;simpl;f_equal;apply;apply
last_holder'_no_out_extend,systems/LockServ.v,14,intros;induction;simpl;inversion;simpl;destruct;simpl;simpl;destruct;auto;simpl;simpl;destruct;auto
all_clients_false_locks_correct_server_update,systems/LiveLockServ.v,11,intros;unfold;intros;destruct;subst;rewrite;simpl;reflexivity;rewrite;assumption;apply
inc_in_flight_to_backup_nil,systems/Counter.v,1,reflexivity
processPackets_preserves_messages,systems/SeqNumCorrect.v,7,intros;unfold;induction;reflexivity;simpl;rewrite;reflexivity
pt_map_onet_tot_map_label_event_inf_often_occurred,core/PartialMapExecutionSimulations.v,3,intros;apply;assumption
InputHandler_cases,systems/LiveLockServ.v,36,intros;unfold;destruct;destruct;simpl;injection;left;exists;split;auto;left;auto;destruct;simpl;injection;left;exists;split;auto;right;split;auto;injection;left;exists;split;auto;right;split;auto;destruct;simpl;discriminate;injection;right;auto
tot_map_net_event_map_unfold,core/TotalMapExecutionSimulations.v,6,intros;destruct;simpl;reflexivity;simpl;reflexivity
tot_map_packet_map_eq,core/TotalMapSimulations.v,12,intros;unfold;induction;reflexivity;simpl;f_equal;unfold;simpl;f_equal;reflexivity;reflexivity;apply
nodup,systems/LiveLockServ.v,2,unfold;apply
locks_correct_unlock_sent_lock,systems/LockServ.v,26,intros;unfold;intros;destruct;contradiction;destruct;apply;subst;unfold;specialize;destruct;auto;destruct;auto;unfold;specialize;destruct;auto;destruct;auto;unfold;specialize;destruct;auto;destruct;auto
permutation_nodes,core/TotalMapSimulations.v,1,apply
inputs_m_backup,systems/PrimaryBackup.v,3,intros;simpl;reflexivity
backup_plus_network_eq_primary,systems/Counter.v,48,intros;induction;simpl;unfold;simpl;reflexivity;destruct;inversion;subst;simpl;destruct;subst;simpl;rewrite;unfold;simpl;omega;destruct;subst;simpl;rewrite;unfold;simpl;omega;simpl;rewrite;unfold;simpl;omega;destruct;subst;simpl;rewrite;unfold;simpl;omega;destruct;subst;simpl;rewrite;unfold;simpl;omega;simpl;rewrite;unfold;simpl;omega
lb_step_ordered_failure_pt_mapped_simulation_1_silent,core/PartialMapExecutionSimulations.v,18,intros;inversion;subst;split;constructor;assumption;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;rewrite;reflexivity;simpl;reflexivity;discriminate
PB_input_handler_defn,systems/PrimaryBackup.v,62,intros;unfold;destruct;simpl;destruct;simpl;injection;subst;left;split;reflexivity;split;reflexivity;split;reflexivity;exists;split;reflexivity;split;reflexivity;destruct;right;split;reflexivity;reflexivity;left;reflexivity;injection;subst;right;left;split;reflexivity;split;reflexivity;split;reflexivity;reflexivity;destruct;simpl;injection;subst;right;right;split;reflexivity;split;reflexivity;split;reflexivity;reflexivity;injection;subst;right;right;split;reflexivity;split;reflexivity;split;reflexivity;reflexivity
step_failure_deserialized_simulation,systems/SerializedMsgParamsCorrect.v,4359,intros;inversion;subst;left;apply;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl
correspond_Prefix,systems/PrimaryBackup.v,4,intros;unfold;destruct;assumption
revertNetwork_input,systems/SeqNumCorrect.v,27,intros;unfold;simpl;rewrite;simpl;unfold;destruct;inversion;subst;rewrite;simpl;rewrite;f_equal;rewrite;reflexivity;apply;intros;destruct;subst;rewrite;reflexivity;rewrite;auto;rewrite;auto;reflexivity;inversion
step_ordered_failure_tot_mapped_simulation_star_1,core/TotalMapSimulations.v,17,intros;generalize_dependent;generalize_dependent;generalize_dependent;induction;intros;subst;constructor;destruct;destruct;inversion;subst;specialize;constructor;apply;auto;assumption
filterMap_pt_map_packet_map_eq_some,core/PartialMapSimulations.v,18,intros;induction;simpl;reflexivity;destruct;simpl;destruct;simpl;rewrite;inversion;subst;f_equal;apply;discriminate;simpl;destruct;discriminate;apply
locks_correct_unlock_net_handlers_old,systems/LockServ.v,26,intros;unfold;intros;destruct;subst;rewrite;specialize;destruct;left;unfold;specialize;rewrite;destruct;simpl;auto;right;unfold;specialize;rewrite;destruct;simpl;auto;rewrite;auto;apply;auto
step_async_tot_mapped_simulation_1,core/TotalMapSimulations.v,31,intros;inversion;subst;simpl;constructor;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;simpl;constructor;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity
remove_not_in_nop,core/DupDropReordering.v,16,intros;induction;reflexivity;simpl;destruct;subst;exfalso;apply;left;reflexivity;f_equal;apply;intro;apply;right;assumption
reachable_revert_step,systems/SeqNumCorrect.v,29,intros;inversion;subst;simpl;left;apply;auto;left;apply;auto;left;apply;auto;left;apply;auto;right;split;auto;unfold;simpl;destruct;simpl;auto;exfalso;unfold;destruct;simpl;congruence
pt_map_onet_event_Map_unfold,core/PartialMapExecutionSimulations.v,5,intros;destruct;reflexivity;simpl;reflexivity
step_ordered_pt_ext_mapped_simulation_star_1,core/PartialExtendedMapSimulations.v,18,intros;induction;exists;constructor;destruct;destruct;unfold;simpl;destruct;exists;constructor;unfold;simpl;rewrite;constructor;assumption;assumption;assumption
lb_step_execution_lb_step_ordered_failure_tot_map_onet_infseq,core/TotalMapExecutionSimulations.v,29,intros;unfold;destruct;split;unfold;destruct;split;unfold;destruct;split;apply;assumption;assumption;assumption;unfold;destruct;split;intros;specialize;destruct;split;unfold;destruct;split;apply;assumption;assumption;assumption;assumption
locks_correct_implies_mutex,systems/LiveLockServ.v,25,intros;unfold;intros;unfold;specialize;destruct;destruct;simpl;destruct;destruct;exfalso;apply;split;reflexivity;destruct;exfalso;apply;split;reflexivity;destruct;exfalso;apply;split;reflexivity;auto
step_async_serialize_simulation,systems/SerializedMsgParamsCorrect.v,52,intros;inversion;subst;simpl;unfold;constructor;assumption;simpl;unfold;rewrite;simpl;rewrite;simpl;apply;intros;destruct;simpl;unfold;destruct;reflexivity;unfold;constructor;assumption;simpl;unfold;rewrite;simpl;rewrite;simpl;apply;intros;destruct;simpl;unfold;destruct;reflexivity;unfold;constructor;assumption;simpl;unfold;rewrite;simpl;rewrite;simpl;apply;intros;destruct;simpl;unfold;destruct;reflexivity
locks_correct_at_head_preserved,systems/LiveLockServ.v,11,intros;unfold;intros;specialize;destruct;subst;apply;apply;unfold;rewrite;auto
trace_inputs_output,systems/Counter.v,3,intros;simpl;reflexivity
ordered_dynamic_no_outgoing_uninitialized,core/DynamicNetLemmas.v,0,
NoDup_all_nodes,systems/PrimaryBackup.v,2,unfold;apply
trace_mutual_exclusion'_extend_input,systems/LiveLockServ.v,44,intros;induction;constructor;simpl;constructor;auto;destruct;simpl;auto;destruct;simpl;destruct;subst;auto;destruct;simpl;auto;destruct;subst;auto;contradiction;destruct;subst;auto;contradiction;destruct;simpl;auto;destruct;simpl;destruct;subst;auto;destruct;simpl;auto;destruct;subst;auto;contradiction;destruct;subst;auto;contradiction
last_holder'_server_extend,systems/LiveLockServ.v,12,intros;unfold;rewrite;simpl;destruct;simpl;reflexivity;destruct;simpl;reflexivity;simpl;reflexivity
correspond_inductive,systems/PrimaryBackup.v,34,intros;induction;intros;inversion;subst;rewrite;assumption;simpl;discriminate;inversion;subst;inversion;subst;simpl;subst;apply;auto;destruct;rewrite;assumption;simpl;subst;apply;auto;destruct;apply;eauto;simpl;subst;apply;auto;destruct;apply;eauto
collate_ls_pt_map_eq,core/PartialMapSimulations.v,17,intros;apply;intros;apply;intros;unfold;rewrite;simpl;rewrite;rewrite;rewrite;rewrite;rewrite;reflexivity;intros;destruct;auto
InputHandler_backup_no_msgs,systems/Counter.v,6,intros;unfold;destruct;inversion;subst;reflexivity
map_msg_fail_eq_nodup,core/TotalMapSimulations.v,20,intros;apply;apply;apply;intros;unfold;destruct;split;congruence;apply;intros;unfold;destruct;split;congruence;apply;rewrite;simpl;rewrite;assumption
step_ordered_dynamic_failure_deserialized_simulation,systems/SerializedMsgParamsCorrect.v,37,intros;inversion;subst;simpl;left;constructor;assumption;left;econstructor;eauto;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;left;econstructor;eauto;unfold;simpl;rewrite;reflexivity;unfold;simpl;rewrite;reflexivity;right;split;split;auto;unfold;simpl;rewrite;reflexivity
correspond_init,systems/PrimaryBackup.v,3,unfold;simpl;reflexivity
ordered_dynamic_failed_then_initialized,core/DynamicNetLemmas.v,0,
locks_correct_init,systems/LiveLockServ.v,0,
InputUnlock_enabled,systems/LiveLockServ.v,11,intros;unfold;intros;unfold;destruct;apply;exists;split;apply;simpl;reflexivity
step_failure_tot_mapped_simulation_star_1,core/TotalMapSimulations.v,20,intros;generalize_dependent;generalize_dependent;induction;intros;subst;constructor;destruct;destruct;inversion;subst;apply;apply;apply;reflexivity;apply;constructor;apply;assumption;reflexivity
locks_correct_unlock_net_handlers_new,systems/LiveLockServ.v,22,intros;unfold;unfold;intros;destruct;subst;rewrite;specialize;rewrite;destruct;simpl;destruct;simpl;intros;discriminate;intros;discriminate;intros;discriminate;rewrite;auto;apply
tot_map_name_in,core/TotalMapSimulations.v,12,intros;induction;simpl;contradiction;simpl;destruct;left;inversion;reflexivity;right;apply;assumption
hd_error_filterMap_pt_map_msg,core/PartialMapSimulations.v,6,intros;simpl;rewrite;simpl;rewrite;reflexivity
pt_map_odnet_tot_map_label_event_inf_often_occurred_conv,core/PartialMapExecutionSimulations.v,13,intros;unfold;intros;specialize;destruct;exists;split;auto;unfold;unfold;simpl;unfold;assumption
step_ordered_failure_deserialized_simulation,systems/SerializedMsgParamsCorrect.v,39,intros;inversion;subst;simpl;left;constructor;assumption;left;constructor;assumption;unfold;simpl;rewrite;reflexivity;left;constructor;assumption;unfold;simpl;rewrite;reflexivity;left;constructor;assumption;unfold;simpl;rewrite;reflexivity;left;constructor;assumption;unfold;simpl;rewrite;reflexivity;right;split;split;reflexivity
step_ordered_dynamic_failure_pt_mapped_simulation_1,core/PartialMapSimulations.v,0,
strong_fairness_weak,core/LabeledNet.v,3,move;move;apply
tot_map_odnet_event_map_unfold,core/TotalMapExecutionSimulations.v,5,intros;destruct;reflexivity;simpl;reflexivity
